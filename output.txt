[H[2J[3J========================
FXP Tester run
========================
Num type sizes in this system:
char        has a size of 1 bytes.
int         has a size of 4 bytes.
long        has a size of 8 bytes.
long long   has a size of 8 bytes.
float       has a size of 4 bytes.
double      has a size of 8 bytes.
long double has a size of 16 bytes.

Running tests for frac-bit sizes: 0, 11, 14, 16, 24, 31

========================
FXP configuration parameters:
frac bits   : 4 (requested was 0)
whole bits  : 28
pos infinity: 2147483647 (Lf: 134217728.000000)
whole max   : 134217727
frac mask   : 15
frac max    : 15 (->decimals: .9)
whole min   : -134217727
neg infinity: -2147483647 (Lf: -134217728.000000)
undefined   : -2147483648 (Lf: -134217728.000000)
max_ok_delta: 2.666667E-01
max_delta   : 4.666667E-01

Checking extreme int values, part I:
Infinity, got +INF,	expected 134217728.000000 (~same)
Largest, got 134217727.  8 (bin frac=14),	expected 134217727.933333 (~same)
HalfMax, got 67108863.  9 (bin frac=15),	expected 67108863.966667 (~same)
Largest frac, got 0.  9 (bin frac=15),	expected 1.000000 (~same)
tiniest, got 0.  0 (bin frac=1),	expected 0.066667 (~same)
0.5, got 0.  4 (bin frac=8),	expected 0.500000 (~same)
zero, got 0.  0 (bin frac=0),	expected 0.000000 (~same)
-tiniest, got -0.  0 (bin frac=-1),	expected -0.066667 (~same)
-Largest frac, got -0. -9 (bin frac=-15),	expected -1.000000 (~same)
Most negative, got -134217727. -8 (bin frac=-14),	expected -134217727.933333 (~same)
-Infinity, got -INF,	expected -134217728.000000 (~same)
Undefined, got UNDEF,	expected -134217728.000000 (~same)

Checking extreme int values, part II:
Almost most negative, got -134217727. -7 (bin frac=-13),	expected -134217727.866667 (~same)
 Largest -Largest, got 0.  0 (bin frac=0),	expected 0.000000 (~same)
-Largest +Largest, got 0.  0 (bin frac=0),	expected 0.000000 (~same)
Largest + 0, got 134217727.  8 (bin frac=14),	expected 134217727.933333 (~same)
-Largest - 0, got -134217727. -8 (bin frac=-14),	expected -134217727.933333 (~same)
Largest - tiniest, got 134217727.  7 (bin frac=13),	expected 134217727.866667 (~same)
Largest + tiniest safe, got +INF,	expected 134217728.000000 (~same)
Largest + tiniest unsafe, got +INF,	expected 134217728.000000 (~same)
+inf + +inf, got +INF,	expected 134217728.000000 (~same)
-inf - +inf, got -INF,	expected -134217728.000000 (~same)
+inf + -inf, got UNDEF,	expected -134217728.000000 (~same)
-inf + -inf, got -INF,	expected -134217728.000000 (~same)
-inf - -inf, got UNDEF,	expected -134217728.000000 (~same)
+inf * -inf, got -INF,	expected -134217728.000000 (~same)
+inf - 0.5, got +INF,	expected 134217728.000000 (~same)
-inf + 0.5, got -INF,	expected -134217728.000000 (~same)
+num / zero, got +INF,	expected 134217728.000000 (~same)
zero / zero, got UNDEF,	expected -134217728.000000 (~same)
zero * zero, got 0.  0 (bin frac=0),	expected 0.000000 (~same)
zero + zero, got 0.  0 (bin frac=0),	expected 0.000000 (~same)
zero - zero, got 0.  0 (bin frac=0),	expected 0.000000 (~same)
-num / zero, got -INF,	expected -134217728.000000 (~same)
zero * +inf, got UNDEF,	expected -134217728.000000 (~same)
zero * -inf, got UNDEF,	expected -134217728.000000 (~same)
zero * undef, got UNDEF,	expected -134217728.000000 (~same)
-inf * undef, got UNDEF,	expected -134217728.000000 (~same)
+inf * undef, got UNDEF,	expected -134217728.000000 (~same)
undef * undef, got UNDEF,	expected -134217728.000000 (~same)
tiniest * inf, got +INF,	expected 134217728.000000 (~same)

Checking extreme int values, part III:
Way Too Large whole part!, got +INF,	expected 134217728.000000 (~same)
Largest * 1, got 134217727.  8 (bin frac=14),	expected 134217727.933333 (~same)
Largest * -1, got -134217727. -8 (bin frac=-14),	expected -134217727.933333 (~same)
Largest + two safe, got +INF,	expected 134217728.000000 (~same)
Largest + two unsafe, got -134217726. -1 (bin frac=-2),	expected -134217726.133333 (~same)
Safe Too neg substraction, got -INF,	expected -134217728.000000 (~same)
Unsafe Too neg substraction, got 134217727.  6 (bin frac=10),	expected 134217727.666667 (~same)
Largest + 0.5, got +INF,	expected 134217728.000000 (~same)
-Largest - 0.5, got -INF,	expected -134217728.000000 (~same)
+HalfMax + HMaxp2, got +INF,	expected 134217728.000000 (~same)
-HalfMax - HMaxp2, got -INF,	expected -134217728.000000 (~same)
HalfMax + HalfMax, got 134217727.  8 (bin frac=14),	expected 134217727.933333 (~same)
FXP_MAX - HalfMax, got 67108863.  9 (bin frac=15),	expected 67108864.000000 (~same)
HalfMax + FXP_MAX, got +INF,	expected 134217728.000000 (~same)
-FXP_MAX - HalfMax, got -INF,	expected -134217728.000000 (~same)
HalfMax * 2, got 134217727.  8 (bin frac=14),	expected 134217727.933333 (~same)
HalfMax * 2 (long), got 134217727.  8 (bin frac=14),	expected 134217727.933333 (~same)
HalfMax * 3, got +INF,	expected 134217728.000000 (~same)
-HalfMax * 3, got -INF,	expected -134217728.000000 (~same)
(HalfMax+0.5)*2, got +INF,	expected 134217728.000000 (~same)
(HalfMax+0.5)*2 (long), got +INF,	expected 134217728.000000 (~same)

Checking decimal <=> bin mappings of frac ranges:
Max frac dec: 9 (bin 15)
Showing fxp for 0.  0: 0.  0 (bin frac=0)
Showing fxp for 0.  1: 0.  0 (bin frac=1)
Showing fxp for 0.  2: 0.  1 (bin frac=3)
Showing fxp for 0.  3: 0.  3 (bin frac=5)
Showing fxp for 0.  4: 0.  3 (bin frac=6)
Showing fxp for 0.  5: 0.  4 (bin frac=8)
:
Showing fxp for 0.  3: 0.  3 (bin frac=5)
Showing fxp for 0.  4: 0.  3 (bin frac=6)
Showing fxp for 0.  5: 0.  4 (bin frac=8)
Showing fxp for 0.  6: 0.  6 (bin frac=10)
Showing fxp for 0.  7: 0.  6 (bin frac=11)
:
Showing fxp for 0.  4: 0.  3 (bin frac=6)
Showing fxp for 0.  5: 0.  4 (bin frac=8)
Showing fxp for 0.  6: 0.  6 (bin frac=10)
Showing fxp for 0.  7: 0.  6 (bin frac=11)
Showing fxp for 0.  8: 0.  7 (bin frac=13)
Showing fxp for 0.  9: 0.  9 (bin frac=15)

Checking sign taken from frac when whole == 0:
-0.(+)500, got 0.466 (bin frac=7),	expected 0.500000 (~same)
-0.(-)500, got -0.-466 (bin frac=-7),	expected -0.500000 (~same)

Truncation of longer frac decimal arguments:
0.222222, got 0.199 (bin frac=3),	expected 0.222000 (~same)
0.777777, got 0.732 (bin frac=11),	expected 0.777000 (~same)
0.991999, got 0.932 (bin frac=14),	expected 0.991000 (~same)
0.999999, got 0.999 (bin frac=15),	expected 0.999000 (~same)

Checking extreme frac values:
maxfrac, got 0.  9 (bin frac=15),	expected 1.000000 (~same)
0.5 + maxfrac, got 1.  4 (bin frac=7),	expected 1.500000 (~same)
maxfrac +tiniest, got 1.  0 (bin frac=0),	expected 1.000000 (~same)
-maxfrac -tiniest, got -1.  0 (bin frac=0),	expected -1.000000 (~same)
maxfrac - maxfrac, got 0.  0 (bin frac=0),	expected 0.000000 (~same)

Simple ops when using 3 or more bits for the whole part:
 1 + 1, got 2.  0 (bin frac=0),	expected 2.000000 (~same)
-1 - 1, got -2.  0 (bin frac=0),	expected -2.000000 (~same)
Ok sum == 2, got 2.  0 (bin frac=0),	expected 2.000000 (~same)
Ok sum == -2, got -2.  0 (bin frac=0),	expected -2.000000 (~same)
 num, got 0.  4 (bin frac=7),	expected 0.466667 (~same)
 num +  2, got 2.  4 (bin frac=7),	expected 2.466667 (~same)
 num + -2, got -1. -5 (bin frac=-9),	expected -1.533333 (~same)
-num +  2, got 1.  5 (bin frac=9),	expected 1.533333 (~same)
-num + -2, got -2. -4 (bin frac=-7),	expected -2.466667 (~same)
 num -  2, got -1. -5 (bin frac=-9),	expected -1.533333 (~same)
 num - -2, got 2.  4 (bin frac=7),	expected 2.466667 (~same)
-num -  2, got -2. -4 (bin frac=-7),	expected -2.466667 (~same)
-num - -2, got 1.  5 (bin frac=9),	expected 1.533333 (~same)
 num *  2, got 0.  8 (bin frac=14),	expected 0.933333 (~same)
 num * -2, got -0. -8 (bin frac=-14),	expected -0.933333 (~same)
-num *  2, got -0. -8 (bin frac=-14),	expected -0.933333 (~same)
-num * -2, got 0.  8 (bin frac=14),	expected 0.933333 (~same)
 num *  2 (long), got 0.  8 (bin frac=14),	expected 0.933333 (~same)
 num * -2 (long), got -0. -8 (bin frac=-14),	expected -0.933333 (~same)
-num *  2 (long), got -0. -8 (bin frac=-14),	expected -0.933333 (~same)
-num * -2 (long), got 0.  8 (bin frac=14),	expected 0.933333 (~same)
 num /  2, got 0.  1 (bin frac=3),	expected 0.233333 (~same)
 num / -2, got -0. -1 (bin frac=-3),	expected -0.233333 (~same)
-num /  2, got -0. -1 (bin frac=-3),	expected -0.233333 (~same)
-num / -2, got 0.  1 (bin frac=3),	expected 0.233333 (~same)

Verifying different op implementations using random numbers:
n1 = -16666162. -3 (bin frac=-5)
n2 = 18127522.  9 (bin frac=15)
n3 = -0. -1 (bin frac=-3) (n3 always random between -1 and 1)
a. sum vs. sum_l, got 1461360.  6 (bin frac=10),	expected 1461360.666667 (~same)
b. sum vs. sum_l, got -16666162. -4 (bin frac=-8),	expected -16666162.533333 (~same)
c. mul vs. mul_l, got -INF,	expected -134217728.000000 (~same)
d. mul vs. mul_d, got -INF,	expected -134217728.000000 (~same)
e. mul_l vs. mul_d, got -INF,	expected -134217728.000000 (~same)
f. mul vs. mul_l, got 3124905.  3 (bin frac=6),	expected 3124905.400000 (~same)
g. mul vs. mul_d, got 3124905.  3 (bin frac=6),	expected 3124905.400000 (~same)
h. mul_l vs. mul_d, got 3124905.  3 (bin frac=6),	expected 3124905.400000 (~same)
i. div vs. div_l, got -0. -8 (bin frac=-14),	expected -0.933333 (~same)
n1 = 97436040.  1 (bin frac=2)
n2 = 10386846.  3 (bin frac=5)
n3 = 0.  0 (bin frac=0) (n3 always random between -1 and 1)
a. sum vs. sum_l, got 107822886.  4 (bin frac=7),	expected 107822886.466667 (~same)
b. sum vs. sum_l, got 97436040.  1 (bin frac=2),	expected 97436040.133333 (~same)
c. mul vs. mul_l, got +INF,	expected 134217728.000000 (~same)
d. mul vs. mul_d, got +INF,	expected 134217728.000000 (~same)
e. mul_l vs. mul_d, got +INF,	expected 134217728.000000 (~same)
f. mul vs. mul_l, got 0.  0 (bin frac=0),	expected 0.000000 (~same)
g. mul vs. mul_d, got 0.  0 (bin frac=0),	expected 0.000000 (~same)
h. mul_l vs. mul_d, got 0.  0 (bin frac=0),	expected 0.000000 (~same)
i. div vs. div_l, got 9.  3 (bin frac=6),	expected 9.400000 (~same)
n1 = -25207587. -2 (bin frac=-4)
n2 = -74883666. -2 (bin frac=-4)
n3 = 0.  2 (bin frac=4) (n3 always random between -1 and 1)
a. sum vs. sum_l, got -100091253. -4 (bin frac=-8),	expected -100091253.533333 (~same)
b. sum vs. sum_l, got -25207587.  0 (bin frac=0),	expected -25207587.000000 (~same)
c. mul vs. mul_l, got +INF,	expected 134217728.000000 (~same)
d. mul vs. mul_d, got +INF,	expected 134217728.000000 (~same)
e. mul_l vs. mul_d, got +INF,	expected 134217728.000000 (~same)
f. mul vs. mul_l, got -6301896. -7 (bin frac=-13),	expected -6301896.866667 (~same)
g. mul vs. mul_d, got -6301896. -7 (bin frac=-13),	expected -6301896.866667 (~same)
h. mul_l vs. mul_d, got -6301896. -7 (bin frac=-13),	expected -6301896.866667 (~same)
i. div vs. div_l, got 0.  3 (bin frac=5),	expected 0.333333 (~same)
n1 = -33501907. -2 (bin frac=-4)
n2 = -45482012. -7 (bin frac=-13)
n3 = 0.  1 (bin frac=2) (n3 always random between -1 and 1)
a. sum vs. sum_l, got -78983920.  0 (bin frac=-1),	expected -78983920.066667 (~same)
b. sum vs. sum_l, got -33501907. -1 (bin frac=-2),	expected -33501907.133333 (~same)
c. mul vs. mul_l, got +INF,	expected 134217728.000000 (~same)
d. mul vs. mul_d, got +INF,	expected 134217728.000000 (~same)
e. mul_l vs. mul_d, got +INF,	expected 134217728.000000 (~same)
f. mul vs. mul_l, got -4187738. -3 (bin frac=-6),	expected -4187738.400000 (~same)
g. mul vs. mul_d, got -4187738. -3 (bin frac=-6),	expected -4187738.466667 (~same)
h. mul_l vs. mul_d, got -4187738. -3 (bin frac=-6),	expected -4187738.466667 (~same)
i. div vs. div_l, got 0.  6 (bin frac=11),	expected 0.733333 (~same)
n1 = -112366806. -1 (bin frac=-3)
n2 = 22705892.  2 (bin frac=4)
n3 = 0.  6 (bin frac=10) (n3 always random between -1 and 1)
a. sum vs. sum_l, got -89660913. -9 (bin frac=-15),	expected -89660914.000000 (~same)
b. sum vs. sum_l, got -112366805. -5 (bin frac=-9),	expected -112366805.600000 (~same)
c. mul vs. mul_l, got -INF,	expected -134217728.000000 (~same)
d. mul vs. mul_d, got -INF,	expected -134217728.000000 (~same)
e. mul_l vs. mul_d, got -INF,	expected -134217728.000000 (~same)
f. mul vs. mul_l, got -70229253. -7 (bin frac=-13),	expected -70229253.866667 (~same)
g. mul vs. mul_d, got -70229253. -7 (bin frac=-13),	expected -70229253.933333 (~same)
h. mul_l vs. mul_d, got -70229253. -7 (bin frac=-13),	expected -70229253.933333 (~same)
i. div vs. div_l, got -4. -9 (bin frac=-15),	expected -5.000000 (~same)
n1 = 55233724.  6 (bin frac=11)
n2 = 76421995.  5 (bin frac=9)
n3 = -0. -3 (bin frac=-6) (n3 always random between -1 and 1)
a. sum vs. sum_l, got 131655720.  2 (bin frac=4),	expected 131655720.266667 (~same)
b. sum vs. sum_l, got 55233724.  3 (bin frac=5),	expected 55233724.333333 (~same)
c. mul vs. mul_l, got +INF,	expected 134217728.000000 (~same)
d. mul vs. mul_d, got +INF,	expected 134217728.000000 (~same)
e. mul_l vs. mul_d, got +INF,	expected 134217728.000000 (~same)
f. mul vs. mul_l, got -20712646. -7 (bin frac=-12),	expected -20712646.800000 (~same)
g. mul vs. mul_d, got -20712646. -7 (bin frac=-12),	expected -20712646.866667 (~same)
h. mul_l vs. mul_d, got -20712646. -7 (bin frac=-12),	expected -20712646.866667 (~same)
i. div vs. div_l, got 0.  6 (bin frac=11),	expected 0.733333 (~same)
n1 = -63983546. -6 (bin frac=-10)
n2 = 92463153.  8 (bin frac=14)
n3 = -0. -4 (bin frac=-7) (n3 always random between -1 and 1)
a. sum vs. sum_l, got 28479607.  2 (bin frac=4),	expected 28479607.266667 (~same)
b. sum vs. sum_l, got -63983547.  0 (bin frac=-1),	expected -63983547.066667 (~same)
c. mul vs. mul_l, got -INF,	expected -134217728.000000 (~same)
d. mul vs. mul_d, got -INF,	expected -134217728.000000 (~same)
e. mul_l vs. mul_d, got -INF,	expected -134217728.000000 (~same)
f. mul vs. mul_l, got 27992801.  6 (bin frac=10),	expected 27992801.666667 (~same)
g. mul vs. mul_d, got 27992801.  6 (bin frac=10),	expected 27992801.666667 (~same)
h. mul_l vs. mul_d, got 27992801.  6 (bin frac=10),	expected 27992801.666667 (~same)
i. div vs. div_l, got -0. -6 (bin frac=-11),	expected -0.733333 (~same)
n1 = 70390574.  0 (bin frac=0)
n2 = -68633997. -1 (bin frac=-2)
n3 = -0. -1 (bin frac=-2) (n3 always random between -1 and 1)
a. sum vs. sum_l, got 1756576.  8 (bin frac=14),	expected 1756576.933333 (~same)
b. sum vs. sum_l, got 70390573.  8 (bin frac=14),	expected 70390573.933333 (~same)
c. mul vs. mul_l, got -INF,	expected -134217728.000000 (~same)
d. mul vs. mul_d, got -INF,	expected -134217728.000000 (~same)
e. mul_l vs. mul_d, got -INF,	expected -134217728.000000 (~same)
f. mul vs. mul_l, got -8798821. -7 (bin frac=-12),	expected -8798821.800000 (~same)
g. mul vs. mul_d, got -8798821. -7 (bin frac=-12),	expected -8798821.800000 (~same)
h. mul_l vs. mul_d, got -8798821. -7 (bin frac=-12),	expected -8798821.800000 (~same)
i. div vs. div_l, got -1.  0 (bin frac=0),	expected -1.000000 (~same)
n1 = 9916258.  1 (bin frac=3)
n2 = -56275384. -3 (bin frac=-5)
n3 = 0.  1 (bin frac=3) (n3 always random between -1 and 1)
a. sum vs. sum_l, got -46359126. -1 (bin frac=-2),	expected -46359126.133333 (~same)
b. sum vs. sum_l, got 9916258.  3 (bin frac=6),	expected 9916258.400000 (~same)
c. mul vs. mul_l, got -INF,	expected -134217728.000000 (~same)
d. mul vs. mul_d, got -INF,	expected -134217728.000000 (~same)
e. mul_l vs. mul_d, got -INF,	expected -134217728.000000 (~same)
f. mul vs. mul_l, got 1859298.  3 (bin frac=6),	expected 1859298.400000 (~same)
g. mul vs. mul_d, got 1859298.  3 (bin frac=6),	expected 1859298.400000 (~same)
h. mul_l vs. mul_d, got 1859298.  3 (bin frac=6),	expected 1859298.400000 (~same)
i. div vs. div_l, got -0. -1 (bin frac=-2),	expected -0.133333 (~same)
n1 = -61087577. -3 (bin frac=-5)
n2 = 101595716.  6 (bin frac=10)
n3 = 0.  6 (bin frac=11) (n3 always random between -1 and 1)
a. sum vs. sum_l, got 40508139.  3 (bin frac=5),	expected 40508139.333333 (~same)
b. sum vs. sum_l, got -61087576. -6 (bin frac=-10),	expected -61087576.666667 (~same)
c. mul vs. mul_l, got -INF,	expected -134217728.000000 (~same)
d. mul vs. mul_d, got -INF,	expected -134217728.000000 (~same)
e. mul_l vs. mul_d, got -INF,	expected -134217728.000000 (~same)
f. mul vs. mul_l, got -41997709. -3 (bin frac=-6),	expected -41997709.400000 (~same)
g. mul vs. mul_d, got -41997709. -3 (bin frac=-6),	expected -41997709.466667 (~same)
h. mul_l vs. mul_d, got -41997709. -3 (bin frac=-6),	expected -41997709.466667 (~same)
i. div vs. div_l, got -0. -5 (bin frac=-9),	expected -0.600000 (~same)

0 Warnings for 4 frac bits.
Largest delta was: 6.666667E-02
All tests passed using 4-bit fracs, and '9' as max decimal frac.


========================
FXP configuration parameters:
frac bits   : 11 (requested was 11)
whole bits  : 21
pos infinity: 2147483647 (Lf: 1048576.000000)
whole max   : 1048575
frac mask   : 2047
frac max    : 2047 (->decimals: .999)
whole min   : -1048575
neg infinity: -2147483647 (Lf: -1048576.000000)
undefined   : -2147483648 (Lf: -1048576.000000)
max_ok_delta: 3.545258E-02
max_delta   : 6.204201E-02

Checking extreme int values, part I:
Infinity, got +INF,	expected 1048576.000000 (~same)
Largest, got 1048575.998 (bin frac=2046),	expected 1048575.999511 (~same)
HalfMax, got 524287.999 (bin frac=2047),	expected 524287.999756 (~same)
Largest frac, got 0.999 (bin frac=2047),	expected 1.000000 (~same)
tiniest, got 0.  0 (bin frac=1),	expected 0.000489 (~same)
0.5, got 0.499 (bin frac=1024),	expected 0.500000 (~same)
zero, got 0.  0 (bin frac=0),	expected 0.000000 (~same)
-tiniest, got -0.  0 (bin frac=-1),	expected -0.000489 (~same)
-Largest frac, got -0.-999 (bin frac=-2047),	expected -1.000000 (~same)
Most negative, got -1048575.-998 (bin frac=-2046),	expected -1048575.999511 (~same)
-Infinity, got -INF,	expected -1048576.000000 (~same)
Undefined, got UNDEF,	expected -1048576.000000 (~same)

Checking extreme int values, part II:
Almost most negative, got -1048575.-998 (bin frac=-2045),	expected -1048575.999023 (~same)
 Largest -Largest, got 0.  0 (bin frac=0),	expected 0.000000 (~same)
-Largest +Largest, got 0.  0 (bin frac=0),	expected 0.000000 (~same)
Largest + 0, got 1048575.998 (bin frac=2046),	expected 1048575.999511 (~same)
-Largest - 0, got -1048575.-998 (bin frac=-2046),	expected -1048575.999511 (~same)
Largest - tiniest, got 1048575.998 (bin frac=2045),	expected 1048575.999023 (~same)
Largest + tiniest safe, got +INF,	expected 1048576.000000 (~same)
Largest + tiniest unsafe, got +INF,	expected 1048576.000000 (~same)
+inf + +inf, got +INF,	expected 1048576.000000 (~same)
-inf - +inf, got -INF,	expected -1048576.000000 (~same)
+inf + -inf, got UNDEF,	expected -1048576.000000 (~same)
-inf + -inf, got -INF,	expected -1048576.000000 (~same)
-inf - -inf, got UNDEF,	expected -1048576.000000 (~same)
+inf * -inf, got -INF,	expected -1048576.000000 (~same)
+inf - 0.5, got +INF,	expected 1048576.000000 (~same)
-inf + 0.5, got -INF,	expected -1048576.000000 (~same)
+num / zero, got +INF,	expected 1048576.000000 (~same)
zero / zero, got UNDEF,	expected -1048576.000000 (~same)
zero * zero, got 0.  0 (bin frac=0),	expected 0.000000 (~same)
zero + zero, got 0.  0 (bin frac=0),	expected 0.000000 (~same)
zero - zero, got 0.  0 (bin frac=0),	expected 0.000000 (~same)
-num / zero, got -INF,	expected -1048576.000000 (~same)
zero * +inf, got UNDEF,	expected -1048576.000000 (~same)
zero * -inf, got UNDEF,	expected -1048576.000000 (~same)
zero * undef, got UNDEF,	expected -1048576.000000 (~same)
-inf * undef, got UNDEF,	expected -1048576.000000 (~same)
+inf * undef, got UNDEF,	expected -1048576.000000 (~same)
undef * undef, got UNDEF,	expected -1048576.000000 (~same)
tiniest * inf, got +INF,	expected 1048576.000000 (~same)

Checking extreme int values, part III:
Way Too Large whole part!, got +INF,	expected 1048576.000000 (~same)
Largest * 1, got 1048575.998 (bin frac=2046),	expected 1048575.999511 (~same)
Largest * -1, got -1048575.-998 (bin frac=-2046),	expected -1048575.999511 (~same)
Largest + two safe, got +INF,	expected 1048576.000000 (~same)
Largest + two unsafe, got -1048574.  0 (bin frac=-2),	expected -1048574.000977 (~same)
Safe Too neg substraction, got -INF,	expected -1048576.000000 (~same)
Unsafe Too neg substraction, got 1048575.500 (bin frac=1026),	expected 1048575.501221 (~same)
Largest + 0.5, got +INF,	expected 1048576.000000 (~same)
-Largest - 0.5, got -INF,	expected -1048576.000000 (~same)
+HalfMax + HMaxp2, got +INF,	expected 1048576.000000 (~same)
-HalfMax - HMaxp2, got -INF,	expected -1048576.000000 (~same)
HalfMax + HalfMax, got 1048575.998 (bin frac=2046),	expected 1048575.999511 (~same)
FXP_MAX - HalfMax, got 524287.999 (bin frac=2047),	expected 524288.000000 (~same)
HalfMax + FXP_MAX, got +INF,	expected 1048576.000000 (~same)
-FXP_MAX - HalfMax, got -INF,	expected -1048576.000000 (~same)
HalfMax * 2, got 1048575.998 (bin frac=2046),	expected 1048575.999511 (~same)
HalfMax * 2 (long), got 1048575.998 (bin frac=2046),	expected 1048575.999511 (~same)
HalfMax * 3, got +INF,	expected 1048576.000000 (~same)
-HalfMax * 3, got -INF,	expected -1048576.000000 (~same)
(HalfMax+0.5)*2, got +INF,	expected 1048576.000000 (~same)
(HalfMax+0.5)*2 (long), got +INF,	expected 1048576.000000 (~same)

Checking decimal <=> bin mappings of frac ranges:
Max frac dec: 999 (bin 2047)
Showing fxp for 0.  0: 0.  0 (bin frac=0)
Showing fxp for 0.  1: 0.  0 (bin frac=2)
Showing fxp for 0.  2: 0.  1 (bin frac=4)
Showing fxp for 0.  3: 0.  2 (bin frac=6)
Showing fxp for 0.  4: 0.  3 (bin frac=8)
Showing fxp for 0.  5: 0.  4 (bin frac=10)
:
Showing fxp for 0.498: 0.497 (bin frac=1020)
Showing fxp for 0.499: 0.498 (bin frac=1022)
Showing fxp for 0.500: 0.499 (bin frac=1024)
Showing fxp for 0.501: 0.500 (bin frac=1026)
Showing fxp for 0.502: 0.501 (bin frac=1028)
:
Showing fxp for 0.994: 0.993 (bin frac=2036)
Showing fxp for 0.995: 0.994 (bin frac=2038)
Showing fxp for 0.996: 0.995 (bin frac=2040)
Showing fxp for 0.997: 0.996 (bin frac=2042)
Showing fxp for 0.998: 0.997 (bin frac=2044)
Showing fxp for 0.999: 0.999 (bin frac=2047)

Checking sign taken from frac when whole == 0:
-0.(+)500, got 0.499 (bin frac=1024),	expected 0.500000 (~same)
-0.(-)500, got -0.-499 (bin frac=-1024),	expected -0.500000 (~same)

Truncation of longer frac decimal arguments:
0.222222, got 0.221 (bin frac=454),	expected 0.222000 (~same)
0.777777, got 0.776 (bin frac=1592),	expected 0.777000 (~same)
0.991999, got 0.990 (bin frac=2030),	expected 0.991000 (~same)
0.999999, got 0.999 (bin frac=2047),	expected 0.999000 (~same)

Checking extreme frac values:
maxfrac, got 0.999 (bin frac=2047),	expected 1.000000 (~same)
0.5 + maxfrac, got 1.499 (bin frac=1023),	expected 1.500000 (~same)
maxfrac +tiniest, got 1.  0 (bin frac=0),	expected 1.000000 (~same)
-maxfrac -tiniest, got -1.  0 (bin frac=0),	expected -1.000000 (~same)
maxfrac - maxfrac, got 0.  0 (bin frac=0),	expected 0.000000 (~same)

Simple ops when using 3 or more bits for the whole part:
 1 + 1, got 2.  0 (bin frac=0),	expected 2.000000 (~same)
-1 - 1, got -2.  0 (bin frac=0),	expected -2.000000 (~same)
Ok sum == 2, got 2.  0 (bin frac=0),	expected 2.000000 (~same)
Ok sum == -2, got -2.  0 (bin frac=0),	expected -2.000000 (~same)
 num, got 0.499 (bin frac=1023),	expected 0.499756 (~same)
 num +  2, got 2.499 (bin frac=1023),	expected 2.499756 (~same)
 num + -2, got -1.-500 (bin frac=-1025),	expected -1.500244 (~same)
-num +  2, got 1.500 (bin frac=1025),	expected 1.500244 (~same)
-num + -2, got -2.-499 (bin frac=-1023),	expected -2.499756 (~same)
 num -  2, got -1.-500 (bin frac=-1025),	expected -1.500244 (~same)
 num - -2, got 2.499 (bin frac=1023),	expected 2.499756 (~same)
-num -  2, got -2.-499 (bin frac=-1023),	expected -2.499756 (~same)
-num - -2, got 1.500 (bin frac=1025),	expected 1.500244 (~same)
 num *  2, got 0.998 (bin frac=2046),	expected 0.999511 (~same)
 num * -2, got -0.-998 (bin frac=-2046),	expected -0.999511 (~same)
-num *  2, got -0.-998 (bin frac=-2046),	expected -0.999511 (~same)
-num * -2, got 0.998 (bin frac=2046),	expected 0.999511 (~same)
 num *  2 (long), got 0.998 (bin frac=2046),	expected 0.999511 (~same)
 num * -2 (long), got -0.-998 (bin frac=-2046),	expected -0.999511 (~same)
-num *  2 (long), got -0.-998 (bin frac=-2046),	expected -0.999511 (~same)
-num * -2 (long), got 0.998 (bin frac=2046),	expected 0.999511 (~same)
 num /  2, got 0.249 (bin frac=511),	expected 0.249878 (~same)
 num / -2, got -0.-249 (bin frac=-511),	expected -0.249878 (~same)
-num /  2, got -0.-249 (bin frac=-511),	expected -0.249878 (~same)
-num / -2, got 0.249 (bin frac=511),	expected 0.249878 (~same)

Verifying different op implementations using random numbers:
n1 = -1031541.-738 (bin frac=-1514)
n2 = 948860.536 (bin frac=1099)
n3 = -0.-721 (bin frac=-1479) (n3 always random between -1 and 1)
a. sum vs. sum_l, got -82681.-202 (bin frac=-415),	expected -82681.202736 (~same)
b. sum vs. sum_l, got -1031542.-461 (bin frac=-945),	expected -1031542.461651 (~same)
c. mul vs. mul_l, got -INF,	expected -1048576.000000 (~same)
d. mul vs. mul_d, got -INF,	expected -1048576.000000 (~same)
e. mul_l vs. mul_d, got -INF,	expected -1048576.000000 (~same)
f. mul vs. mul_l, got 744946.402 (bin frac=824),	expected 744946.402540 (~same)
g. mul vs. mul_d, got 744946.402 (bin frac=824),	expected 744946.402540 (~same)
h. mul_l vs. mul_d, got 744946.402 (bin frac=824),	expected 744946.402540 (~same)
i. div vs. div_l, got -1.-86 (bin frac=-178),	expected -1.086957 (~same)
n1 = -538532.-144 (bin frac=-296)
n2 = 175522.759 (bin frac=1556)
n3 = 0.100 (bin frac=206) (n3 always random between -1 and 1)
a. sum vs. sum_l, got -363009.-384 (bin frac=-788),	expected -363009.384954 (~same)
b. sum vs. sum_l, got -538532.-43 (bin frac=-90),	expected -538532.043967 (~same)
c. mul vs. mul_l, got -INF,	expected -1048576.000000 (~same)
d. mul vs. mul_d, got -INF,	expected -1048576.000000 (~same)
e. mul_l vs. mul_d, got -INF,	expected -1048576.000000 (~same)
f. mul vs. mul_l, got -54168.-759 (bin frac=-1557),	expected -54168.760625 (~same)
g. mul vs. mul_d, got -54168.-759 (bin frac=-1557),	expected -54168.761114 (~same)
h. mul_l vs. mul_d, got -54168.-759 (bin frac=-1557),	expected -54168.761114 (~same)
i. div vs. div_l, got -3.-67 (bin frac=-139),	expected -3.067904 (~same)
n1 = 952154.492 (bin frac=1009)
n2 = 803405.400 (bin frac=821)
n3 = 0.464 (bin frac=952) (n3 always random between -1 and 1)
a. sum vs. sum_l, got +INF,	expected 1048576.000000 (~same)
b. sum vs. sum_l, got 952154.957 (bin frac=1961),	expected 952154.957987 (~same)
c. mul vs. mul_l, got +INF,	expected 1048576.000000 (~same)
d. mul vs. mul_d, got +INF,	expected 1048576.000000 (~same)
e. mul_l vs. mul_d, got +INF,	expected 1048576.000000 (~same)
f. mul vs. mul_l, got 442603. 64 (bin frac=133),	expected 442603.064973 (~same)
g. mul vs. mul_d, got 442603. 64 (bin frac=133),	expected 442603.064973 (~same)
h. mul_l vs. mul_d, got 442603. 64 (bin frac=133),	expected 442603.064973 (~same)
i. div vs. div_l, got 1.184 (bin frac=379),	expected 1.185149 (~same)
n1 = 847188.555 (bin frac=1139)
n2 = -513415.-503 (bin frac=-1032)
n3 = -0.-388 (bin frac=-797) (n3 always random between -1 and 1)
a. sum vs. sum_l, got 333773. 52 (bin frac=107),	expected 333773.052272 (~same)
b. sum vs. sum_l, got 847188.166 (bin frac=342),	expected 847188.167074 (~same)
c. mul vs. mul_l, got -INF,	expected -1048576.000000 (~same)
d. mul vs. mul_d, got -INF,	expected -1048576.000000 (~same)
e. mul_l vs. mul_d, got -INF,	expected -1048576.000000 (~same)
f. mul vs. mul_l, got -329692.-30 (bin frac=-63),	expected -329692.030777 (~same)
g. mul vs. mul_d, got -329692.-30 (bin frac=-63),	expected -329692.031265 (~same)
h. mul_l vs. mul_d, got -329692.-30 (bin frac=-63),	expected -329692.031265 (~same)
i. div vs. div_l, got -1.-649 (bin frac=-1331),	expected -1.650220 (~same)
n1 = -988658.-967 (bin frac=-1983)
n2 = 221531.750 (bin frac=1537)
n3 = -0.-175 (bin frac=-360) (n3 always random between -1 and 1)
a. sum vs. sum_l, got -767127.-217 (bin frac=-446),	expected -767127.217880 (~same)
b. sum vs. sum_l, got -988659.-143 (bin frac=-295),	expected -988659.144113 (~same)
c. mul vs. mul_l, got -INF,	expected -1048576.000000 (~same)
d. mul vs. mul_d, got -INF,	expected -1048576.000000 (~same)
e. mul_l vs. mul_d, got -INF,	expected -1048576.000000 (~same)
f. mul vs. mul_l, got 173787.708 (bin frac=1452),	expected 173787.709331 (~same)
g. mul vs. mul_d, got 173787.708 (bin frac=1452),	expected 173787.709331 (~same)
h. mul_l vs. mul_d, got 173787.708 (bin frac=1452),	expected 173787.709331 (~same)
i. div vs. div_l, got -4.-462 (bin frac=-947),	expected -4.462628 (~same)
n1 = 105206.219 (bin frac=449)
n2 = 910379.356 (bin frac=731)
n3 = -0.-545 (bin frac=-1118) (n3 always random between -1 and 1)
a. sum vs. sum_l, got 1015585.575 (bin frac=1180),	expected 1015585.576453 (~same)
b. sum vs. sum_l, got 105205.672 (bin frac=1379),	expected 105205.673669 (~same)
c. mul vs. mul_l, got +INF,	expected 1048576.000000 (~same)
d. mul vs. mul_d, got +INF,	expected 1048576.000000 (~same)
e. mul_l vs. mul_d, got +INF,	expected 1048576.000000 (~same)
f. mul vs. mul_l, got -57431.-910 (bin frac=-1865),	expected -57431.911089 (~same)
g. mul vs. mul_d, got -57431.-910 (bin frac=-1865),	expected -57431.911578 (~same)
h. mul_l vs. mul_d, got -57431.-910 (bin frac=-1865),	expected -57431.911578 (~same)
i. div vs. div_l, got 0.115 (bin frac=236),	expected 0.115291 (~same)
n1 = 843838.924 (bin frac=1894)
n2 = 850582.386 (bin frac=792)
n3 = 0.153 (bin frac=314) (n3 always random between -1 and 1)
a. sum vs. sum_l, got +INF,	expected 1048576.000000 (~same)
b. sum vs. sum_l, got 843839. 78 (bin frac=160),	expected 843839.078163 (~same)
c. mul vs. mul_l, got +INF,	expected 1048576.000000 (~same)
d. mul vs. mul_d, got +INF,	expected 1048576.000000 (~same)
e. mul_l vs. mul_d, got +INF,	expected 1048576.000000 (~same)
f. mul vs. mul_l, got 129377.647 (bin frac=1326),	expected 129377.647777 (~same)
g. mul vs. mul_d, got 129377.647 (bin frac=1326),	expected 129377.647777 (~same)
h. mul_l vs. mul_d, got 129377.647 (bin frac=1326),	expected 129377.647777 (~same)
i. div vs. div_l, got 0.991 (bin frac=2031),	expected 0.992184 (~same)
n1 = -181898.-563 (bin frac=-1154)
n2 = 413549.519 (bin frac=1065)
n3 = -0.-653 (bin frac=-1340) (n3 always random between -1 and 1)
a. sum vs. sum_l, got 231650.956 (bin frac=1959),	expected 231650.957010 (~same)
b. sum vs. sum_l, got -181899.-217 (bin frac=-446),	expected -181899.217880 (~same)
c. mul vs. mul_l, got -INF,	expected -1048576.000000 (~same)
d. mul vs. mul_d, got -INF,	expected -1048576.000000 (~same)
e. mul_l vs. mul_d, got -INF,	expected -1048576.000000 (~same)
f. mul vs. mul_l, got 119015.661 (bin frac=1355),	expected 119015.661944 (~same)
g. mul vs. mul_d, got 119015.661 (bin frac=1355),	expected 119015.661944 (~same)
h. mul_l vs. mul_d, got 119015.661 (bin frac=1355),	expected 119015.661944 (~same)
i. div vs. div_l, got -0.-439 (bin frac=-900),	expected -0.439668 (~same)
n1 = 60975. 23 (bin frac=48)
n2 = -944959.-63 (bin frac=-130)
n3 = -0.-426 (bin frac=-874) (n3 always random between -1 and 1)
a. sum vs. sum_l, got -883984.-40 (bin frac=-82),	expected -883984.040059 (~same)
b. sum vs. sum_l, got 60974.596 (bin frac=1222),	expected 60974.596971 (~same)
c. mul vs. mul_l, got -INF,	expected -1048576.000000 (~same)
d. mul vs. mul_d, got -INF,	expected -1048576.000000 (~same)
e. mul_l vs. mul_d, got -INF,	expected -1048576.000000 (~same)
f. mul vs. mul_l, got -26021.-567 (bin frac=-1162),	expected -26021.567660 (~same)
g. mul vs. mul_d, got -26021.-567 (bin frac=-1162),	expected -26021.568149 (~same)
h. mul_l vs. mul_d, got -26021.-567 (bin frac=-1162),	expected -26021.568149 (~same)
i. div vs. div_l, got -0.-64 (bin frac=-132),	expected -0.064485 (~same)
n1 = 913123. 15 (bin frac=31)
n2 = -104798.-382 (bin frac=-783)
n3 = 0.530 (bin frac=1087) (n3 always random between -1 and 1)
a. sum vs. sum_l, got 808324.632 (bin frac=1296),	expected 808324.633122 (~same)
b. sum vs. sum_l, got 913123.545 (bin frac=1118),	expected 913123.546165 (~same)
c. mul vs. mul_l, got -INF,	expected -1048576.000000 (~same)
d. mul vs. mul_d, got -INF,	expected -1048576.000000 (~same)
e. mul_l vs. mul_d, got -INF,	expected -1048576.000000 (~same)
f. mul vs. mul_l, got 484650.740 (bin frac=1517),	expected 484650.741085 (~same)
g. mul vs. mul_d, got 484650.740 (bin frac=1517),	expected 484650.741085 (~same)
h. mul_l vs. mul_d, got 484650.740 (bin frac=1517),	expected 484650.741085 (~same)
i. div vs. div_l, got -8.-712 (bin frac=-1460),	expected -8.713239 (~same)

0 Warnings for 11 frac bits.
Largest delta was: 4.885198E-04
All tests passed using 11-bit fracs, and '999' as max decimal frac.


========================
FXP configuration parameters:
frac bits   : 14 (requested was 14)
whole bits  : 18
pos infinity: 2147483647 (Lf: 131072.000000)
whole max   : 131071
frac mask   : 16383
frac max    : 16383 (->decimals: .9999)
whole min   : -131071
neg infinity: -2147483647 (Lf: -131072.000000)
undefined   : -2147483648 (Lf: -131072.000000)
max_ok_delta: 8.894237E-03
max_delta   : 1.556491E-02

Checking extreme int values, part I:
Infinity, got +INF,	expected 131072.000000 (~same)
Largest, got 131071.9998 (bin frac=16382),	expected 131071.999939 (~same)
HalfMax, got 65535.9999 (bin frac=16383),	expected 65535.999969 (~same)
Largest frac, got 0.9999 (bin frac=16383),	expected 1.000000 (~same)
tiniest, got 0.  0 (bin frac=1),	expected 0.000061 (~same)
0.5, got 0.4999 (bin frac=8192),	expected 0.500000 (~same)
zero, got 0.  0 (bin frac=0),	expected 0.000000 (~same)
-tiniest, got -0.  0 (bin frac=-1),	expected -0.000061 (~same)
-Largest frac, got -0.-9999 (bin frac=-16383),	expected -1.000000 (~same)
Most negative, got -131071.-9998 (bin frac=-16382),	expected -131071.999939 (~same)
-Infinity, got -INF,	expected -131072.000000 (~same)
Undefined, got UNDEF,	expected -131072.000000 (~same)

Checking extreme int values, part II:
Almost most negative, got -131071.-9997 (bin frac=-16381),	expected -131071.999878 (~same)
 Largest -Largest, got 0.  0 (bin frac=0),	expected 0.000000 (~same)
-Largest +Largest, got 0.  0 (bin frac=0),	expected 0.000000 (~same)
Largest + 0, got 131071.9998 (bin frac=16382),	expected 131071.999939 (~same)
-Largest - 0, got -131071.-9998 (bin frac=-16382),	expected -131071.999939 (~same)
Largest - tiniest, got 131071.9997 (bin frac=16381),	expected 131071.999878 (~same)
Largest + tiniest safe, got +INF,	expected 131072.000000 (~same)
Largest + tiniest unsafe, got +INF,	expected 131072.000000 (~same)
+inf + +inf, got +INF,	expected 131072.000000 (~same)
-inf - +inf, got -INF,	expected -131072.000000 (~same)
+inf + -inf, got UNDEF,	expected -131072.000000 (~same)
-inf + -inf, got -INF,	expected -131072.000000 (~same)
-inf - -inf, got UNDEF,	expected -131072.000000 (~same)
+inf * -inf, got -INF,	expected -131072.000000 (~same)
+inf - 0.5, got +INF,	expected 131072.000000 (~same)
-inf + 0.5, got -INF,	expected -131072.000000 (~same)
+num / zero, got +INF,	expected 131072.000000 (~same)
zero / zero, got UNDEF,	expected -131072.000000 (~same)
zero * zero, got 0.  0 (bin frac=0),	expected 0.000000 (~same)
zero + zero, got 0.  0 (bin frac=0),	expected 0.000000 (~same)
zero - zero, got 0.  0 (bin frac=0),	expected 0.000000 (~same)
-num / zero, got -INF,	expected -131072.000000 (~same)
zero * +inf, got UNDEF,	expected -131072.000000 (~same)
zero * -inf, got UNDEF,	expected -131072.000000 (~same)
zero * undef, got UNDEF,	expected -131072.000000 (~same)
-inf * undef, got UNDEF,	expected -131072.000000 (~same)
+inf * undef, got UNDEF,	expected -131072.000000 (~same)
undef * undef, got UNDEF,	expected -131072.000000 (~same)
tiniest * inf, got +INF,	expected 131072.000000 (~same)

Checking extreme int values, part III:
Way Too Large whole part!, got +INF,	expected 131072.000000 (~same)
Largest * 1, got 131071.9998 (bin frac=16382),	expected 131071.999939 (~same)
Largest * -1, got -131071.-9998 (bin frac=-16382),	expected -131071.999939 (~same)
Largest + two safe, got +INF,	expected 131072.000000 (~same)
Largest + two unsafe, got -131070. -1 (bin frac=-2),	expected -131070.000122 (~same)
Safe Too neg substraction, got -INF,	expected -131072.000000 (~same)
Unsafe Too neg substraction, got 131071.5001 (bin frac=8194),	expected 131071.500153 (~same)
Largest + 0.5, got +INF,	expected 131072.000000 (~same)
-Largest - 0.5, got -INF,	expected -131072.000000 (~same)
+HalfMax + HMaxp2, got +INF,	expected 131072.000000 (~same)
-HalfMax - HMaxp2, got -INF,	expected -131072.000000 (~same)
HalfMax + HalfMax, got 131071.9998 (bin frac=16382),	expected 131071.999939 (~same)
FXP_MAX - HalfMax, got 65535.9999 (bin frac=16383),	expected 65536.000000 (~same)
HalfMax + FXP_MAX, got +INF,	expected 131072.000000 (~same)
-FXP_MAX - HalfMax, got -INF,	expected -131072.000000 (~same)
HalfMax * 2, got 131071.9998 (bin frac=16382),	expected 131071.999939 (~same)
HalfMax * 2 (long), got 131071.9998 (bin frac=16382),	expected 131071.999939 (~same)
HalfMax * 3, got +INF,	expected 131072.000000 (~same)
-HalfMax * 3, got -INF,	expected -131072.000000 (~same)
(HalfMax+0.5)*2, got +INF,	expected 131072.000000 (~same)
(HalfMax+0.5)*2 (long), got +INF,	expected 131072.000000 (~same)

Checking decimal <=> bin mappings of frac ranges:
Max frac dec: 9999 (bin 16383)
Showing fxp for 0.  0: 0.  0 (bin frac=0)
Showing fxp for 0.  1: 0.  0 (bin frac=1)
Showing fxp for 0.  2: 0.  1 (bin frac=3)
Showing fxp for 0.  3: 0.  2 (bin frac=4)
Showing fxp for 0.  4: 0.  3 (bin frac=6)
Showing fxp for 0.  5: 0.  4 (bin frac=8)
:
Showing fxp for 0.4998: 0.4997 (bin frac=8189)
Showing fxp for 0.4999: 0.4998 (bin frac=8190)
Showing fxp for 0.5000: 0.4999 (bin frac=8192)
Showing fxp for 0.5001: 0.5000 (bin frac=8193)
Showing fxp for 0.5002: 0.5001 (bin frac=8195)
:
Showing fxp for 0.9994: 0.9993 (bin frac=16374)
Showing fxp for 0.9995: 0.9994 (bin frac=16376)
Showing fxp for 0.9996: 0.9995 (bin frac=16378)
Showing fxp for 0.9997: 0.9996 (bin frac=16379)
Showing fxp for 0.9998: 0.9997 (bin frac=16381)
Showing fxp for 0.9999: 0.9999 (bin frac=16383)

Checking sign taken from frac when whole == 0:
-0.(+)500, got 0.499 (bin frac=8199),	expected 0.500000 (~same)
-0.(-)500, got -0.-499 (bin frac=-8199),	expected -0.500000 (~same)

Truncation of longer frac decimal arguments:
0.222222, got 0.221 (bin frac=3640),	expected 0.222000 (~same)
0.777777, got 0.776 (bin frac=12742),	expected 0.777000 (~same)
0.991999, got 0.990 (bin frac=16251),	expected 0.991000 (~same)
0.999999, got 0.999 (bin frac=16383),	expected 0.999000 (~same)

Checking extreme frac values:
maxfrac, got 0.9999 (bin frac=16383),	expected 1.000000 (~same)
0.5 + maxfrac, got 1.4999 (bin frac=8191),	expected 1.500000 (~same)
maxfrac +tiniest, got 1.  0 (bin frac=0),	expected 1.000000 (~same)
-maxfrac -tiniest, got -1.  0 (bin frac=0),	expected -1.000000 (~same)
maxfrac - maxfrac, got 0.  0 (bin frac=0),	expected 0.000000 (~same)

Simple ops when using 3 or more bits for the whole part:
 1 + 1, got 2.  0 (bin frac=0),	expected 2.000000 (~same)
-1 - 1, got -2.  0 (bin frac=0),	expected -2.000000 (~same)
Ok sum == 2, got 2.  0 (bin frac=0),	expected 2.000000 (~same)
Ok sum == -2, got -2.  0 (bin frac=0),	expected -2.000000 (~same)
 num, got 0.4999 (bin frac=8191),	expected 0.499969 (~same)
 num +  2, got 2.4999 (bin frac=8191),	expected 2.499969 (~same)
 num + -2, got -1.-5000 (bin frac=-8193),	expected -1.500031 (~same)
-num +  2, got 1.5000 (bin frac=8193),	expected 1.500031 (~same)
-num + -2, got -2.-4999 (bin frac=-8191),	expected -2.499969 (~same)
 num -  2, got -1.-5000 (bin frac=-8193),	expected -1.500031 (~same)
 num - -2, got 2.4999 (bin frac=8191),	expected 2.499969 (~same)
-num -  2, got -2.-4999 (bin frac=-8191),	expected -2.499969 (~same)
-num - -2, got 1.5000 (bin frac=8193),	expected 1.500031 (~same)
 num *  2, got 0.9998 (bin frac=16382),	expected 0.999939 (~same)
 num * -2, got -0.-9998 (bin frac=-16382),	expected -0.999939 (~same)
-num *  2, got -0.-9998 (bin frac=-16382),	expected -0.999939 (~same)
-num * -2, got 0.9998 (bin frac=16382),	expected 0.999939 (~same)
 num *  2 (long), got 0.9998 (bin frac=16382),	expected 0.999939 (~same)
 num * -2 (long), got -0.-9998 (bin frac=-16382),	expected -0.999939 (~same)
-num *  2 (long), got -0.-9998 (bin frac=-16382),	expected -0.999939 (~same)
-num * -2 (long), got 0.9998 (bin frac=16382),	expected 0.999939 (~same)
 num /  2, got 0.2499 (bin frac=4095),	expected 0.249985 (~same)
 num / -2, got -0.-2499 (bin frac=-4095),	expected -0.249985 (~same)
-num /  2, got -0.-2499 (bin frac=-4095),	expected -0.249985 (~same)
-num / -2, got 0.2499 (bin frac=4095),	expected 0.249985 (~same)

Verifying different op implementations using random numbers:
n1 = 80021.7505 (bin frac=12297)
n2 = -130975.-4965 (bin frac=-8135)
n3 = 0.1138 (bin frac=1866) (n3 always random between -1 and 1)
a. sum vs. sum_l, got -50953.-7459 (bin frac=-12222),	expected -50953.746017 (~same)
b. sum vs. sum_l, got 80021.8644 (bin frac=14163),	expected 80021.864494 (~same)
c. mul vs. mul_l, got -INF,	expected -131072.000000 (~same)
d. mul vs. mul_d, got -INF,	expected -131072.000000 (~same)
e. mul_l vs. mul_d, got -INF,	expected -131072.000000 (~same)
f. mul vs. mul_l, got 9113.8052 (bin frac=13194),	expected 9113.805347 (~same)
g. mul vs. mul_d, got 9113.8052 (bin frac=13194),	expected 9113.805347 (~same)
h. mul_l vs. mul_d, got 9113.8052 (bin frac=13194),	expected 9113.805347 (~same)
i. div vs. div_l, got -0.-6109 (bin frac=-10010),	expected -0.610999 (~same)
n1 = -45099.-538 (bin frac=-883)
n2 = -101590.-8507 (bin frac=-13939)
n3 = -0.-627 (bin frac=-1028) (n3 always random between -1 and 1)
a. sum vs. sum_l, got -INF,	expected -131072.000000 (~same)
b. sum vs. sum_l, got -45099.-1166 (bin frac=-1911),	expected -45099.116645 (~same)
c. mul vs. mul_l, got +INF,	expected 131072.000000 (~same)
d. mul vs. mul_d, got +INF,	expected 131072.000000 (~same)
e. mul_l vs. mul_d, got +INF,	expected 131072.000000 (~same)
f. mul vs. mul_l, got 2829.7013 (bin frac=11491),	expected 2829.701398 (~same)
g. mul vs. mul_d, got 2829.7013 (bin frac=11491),	expected 2829.701398 (~same)
h. mul_l vs. mul_d, got 2829.7013 (bin frac=11491),	expected 2829.701398 (~same)
i. div vs. div_l, got 0.4438 (bin frac=7273),	expected 0.443936 (~same)
n1 = 45198.3401 (bin frac=5573)
n2 = -36160.-4625 (bin frac=-7579)
n3 = -0.-1769 (bin frac=-2900) (n3 always random between -1 and 1)
a. sum vs. sum_l, got 9037.8775 (bin frac=14378),	expected 9037.877617 (~same)
b. sum vs. sum_l, got 45198.1631 (bin frac=2673),	expected 45198.163157 (~same)
c. mul vs. mul_l, got -INF,	expected -131072.000000 (~same)
d. mul vs. mul_d, got -INF,	expected -131072.000000 (~same)
e. mul_l vs. mul_d, got -INF,	expected -131072.000000 (~same)
f. mul vs. mul_l, got -8000.-1944 (bin frac=-3186),	expected -8000.194470 (~same)
g. mul vs. mul_d, got -8000.-1944 (bin frac=-3186),	expected -8000.194531 (~same)
h. mul_l vs. mul_d, got -8000.-1944 (bin frac=-3186),	expected -8000.194531 (~same)
i. div vs. div_l, got -1.-2498 (bin frac=-4094),	expected -1.249893 (~same)
n1 = -70182.-9488 (bin frac=-15546)
n2 = -113378.-778 (bin frac=-1275)
n3 = -0.-3287 (bin frac=-5387) (n3 always random between -1 and 1)
a. sum vs. sum_l, got -INF,	expected -131072.000000 (~same)
b. sum vs. sum_l, got -70183.-2776 (bin frac=-4549),	expected -70183.277666 (~same)
c. mul vs. mul_l, got +INF,	expected 131072.000000 (~same)
d. mul vs. mul_d, got +INF,	expected 131072.000000 (~same)
e. mul_l vs. mul_d, got +INF,	expected 131072.000000 (~same)
f. mul vs. mul_l, got 23075.8999 (bin frac=14745),	expected 23075.900018 (~same)
g. mul vs. mul_d, got 23075.8999 (bin frac=14745),	expected 23075.900018 (~same)
h. mul_l vs. mul_d, got 23075.8999 (bin frac=14745),	expected 23075.900018 (~same)
i. div vs. div_l, got 0.6189 (bin frac=10141),	expected 0.618995 (~same)
n1 = 114978.1573 (bin frac=2578)
n2 = 97050.9032 (bin frac=14799)
n3 = -0.-6095 (bin frac=-9988) (n3 always random between -1 and 1)
a. sum vs. sum_l, got +INF,	expected 131072.000000 (~same)
b. sum vs. sum_l, got 114977.5477 (bin frac=8974),	expected 114977.547763 (~same)
c. mul vs. mul_l, got +INF,	expected 131072.000000 (~same)
d. mul vs. mul_d, got +INF,	expected 131072.000000 (~same)
e. mul_l vs. mul_d, got +INF,	expected 131072.000000 (~same)
f. mul vs. mul_l, got -70092.-8854 (bin frac=-14507),	expected -70092.885491 (~same)
g. mul vs. mul_d, got -70092.-8854 (bin frac=-14507),	expected -70092.885552 (~same)
h. mul_l vs. mul_d, got -70092.-8854 (bin frac=-14507),	expected -70092.885552 (~same)
i. div vs. div_l, got 1.1846 (bin frac=3026),	expected 1.184704 (~same)
n1 = 36974.6373 (bin frac=10442)
n2 = 110747.5261 (bin frac=8621)
n3 = 0.108 (bin frac=177) (n3 always random between -1 and 1)
a. sum vs. sum_l, got +INF,	expected 131072.000000 (~same)
b. sum vs. sum_l, got 36974.6481 (bin frac=10619),	expected 36974.648172 (~same)
c. mul vs. mul_l, got +INF,	expected 131072.000000 (~same)
d. mul vs. mul_d, got +INF,	expected 131072.000000 (~same)
e. mul_l vs. mul_d, got +INF,	expected 131072.000000 (~same)
f. mul vs. mul_l, got 399.4451 (bin frac=7294),	expected 399.445218 (~same)
g. mul vs. mul_d, got 399.4451 (bin frac=7294),	expected 399.445218 (~same)
h. mul_l vs. mul_d, got 399.4451 (bin frac=7294),	expected 399.445218 (~same)
i. div vs. div_l, got 0.3338 (bin frac=5470),	expected 0.333883 (~same)
n1 = -79354.-9389 (bin frac=-15384)
n2 = -107606.-7759 (bin frac=-12714)
n3 = 0.8097 (bin frac=13268) (n3 always random between -1 and 1)
a. sum vs. sum_l, got -INF,	expected -131072.000000 (~same)
b. sum vs. sum_l, got -79354.-1291 (bin frac=-2116),	expected -79354.129158 (~same)
c. mul vs. mul_l, got +INF,	expected 131072.000000 (~same)
d. mul vs. mul_d, got +INF,	expected 131072.000000 (~same)
e. mul_l vs. mul_d, got +INF,	expected 131072.000000 (~same)
f. mul vs. mul_l, got -64262.-7764 (bin frac=-12722),	expected -64262.776537 (~same)
g. mul vs. mul_d, got -64262.-7764 (bin frac=-12722),	expected -64262.776598 (~same)
h. mul_l vs. mul_d, got -64262.-7764 (bin frac=-12722),	expected -64262.776598 (~same)
i. div vs. div_l, got 0.7373 (bin frac=12082),	expected 0.737472 (~same)
n1 = -43917.-4959 (bin frac=-8126)
n2 = 51039.3730 (bin frac=6113)
n3 = 0.4410 (bin frac=7227) (n3 always random between -1 and 1)
a. sum vs. sum_l, got 7121.8771 (bin frac=14371),	expected 7121.877190 (~same)
b. sum vs. sum_l, got -43917.-548 (bin frac=-899),	expected -43917.054874 (~same)
c. mul vs. mul_l, got -INF,	expected -131072.000000 (~same)
d. mul vs. mul_d, got -INF,	expected -131072.000000 (~same)
e. mul_l vs. mul_d, got -INF,	expected -131072.000000 (~same)
f. mul vs. mul_l, got -19372.-546 (bin frac=-895),	expected -19372.054630 (~same)
g. mul vs. mul_d, got -19372.-546 (bin frac=-895),	expected -19372.054691 (~same)
h. mul_l vs. mul_d, got -19372.-546 (bin frac=-895),	expected -19372.054691 (~same)
i. div vs. div_l, got -0.-8603 (bin frac=-14097),	expected -0.860465 (~same)
n1 = 56763.1248 (bin frac=2045)
n2 = 20594.4204 (bin frac=6889)
n3 = -0.-936 (bin frac=-1534) (n3 always random between -1 and 1)
a. sum vs. sum_l, got 77357.5452 (bin frac=8934),	expected 77357.545321 (~same)
b. sum vs. sum_l, got 56763.311 (bin frac=511),	expected 56763.031191 (~same)
c. mul vs. mul_l, got +INF,	expected 131072.000000 (~same)
d. mul vs. mul_d, got +INF,	expected 131072.000000 (~same)
e. mul_l vs. mul_d, got +INF,	expected 131072.000000 (~same)
f. mul vs. mul_l, got -5314.-6138 (bin frac=-10057),	expected -5314.613868 (~same)
g. mul vs. mul_d, got -5314.-6138 (bin frac=-10057),	expected -5314.613929 (~same)
h. mul_l vs. mul_d, got -5314.-6138 (bin frac=-10057),	expected -5314.613929 (~same)
i. div vs. div_l, got 2.7561 (bin frac=12390),	expected 2.756272 (~same)
n1 = -76515.-2598 (bin frac=-4257)
n2 = -47527.-3151 (bin frac=-5164)
n3 = 0.4035 (bin frac=6612) (n3 always random between -1 and 1)
a. sum vs. sum_l, got -124042.-5749 (bin frac=-9421),	expected -124042.575047 (~same)
b. sum vs. sum_l, got -76514.-8562 (bin frac=-14029),	expected -76514.856314 (~same)
c. mul vs. mul_l, got +INF,	expected 131072.000000 (~same)
d. mul vs. mul_d, got +INF,	expected 131072.000000 (~same)
e. mul_l vs. mul_d, got +INF,	expected 131072.000000 (~same)
f. mul vs. mul_l, got -30878.-8388 (bin frac=-13745),	expected -30878.838979 (~same)
g. mul vs. mul_d, got -30878.-8388 (bin frac=-13745),	expected -30878.839040 (~same)
h. mul_l vs. mul_d, got -30878.-8388 (bin frac=-13745),	expected -30878.839040 (~same)
i. div vs. div_l, got 1.6098 (bin frac=9992),	expected 1.609901 (~same)

0 Warnings for 14 frac bits.
Largest delta was: 6.103888E-05
All tests passed using 14-bit fracs, and '9999' as max decimal frac.


========================
FXP configuration parameters:
frac bits   : 16 (requested was 16)
whole bits  : 16
pos infinity: 2147483647 (Lf: 32768.000000)
whole max   : 32767
frac mask   : 65535
frac max    : 65535 (->decimals: .9999)
whole min   : -32767
neg infinity: -2147483647 (Lf: -32768.000000)
undefined   : -2147483648 (Lf: -32768.000000)
max_ok_delta: 4.455634E-03
max_delta   : 7.797360E-03

Checking extreme int values, part I:
Infinity, got +INF,	expected 32768.000000 (~same)
Largest, got 32767.9998 (bin frac=65534),	expected 32767.999985 (~same)
HalfMax, got 16383.9999 (bin frac=65535),	expected 16383.999992 (~same)
Largest frac, got 0.9999 (bin frac=65535),	expected 1.000000 (~same)
tiniest, got 0.  0 (bin frac=1),	expected 0.000015 (~same)
0.5, got 0.4999 (bin frac=32768),	expected 0.500000 (~same)
zero, got 0.  0 (bin frac=0),	expected 0.000000 (~same)
-tiniest, got -0.  0 (bin frac=-1),	expected -0.000015 (~same)
-Largest frac, got -0.-9999 (bin frac=-65535),	expected -1.000000 (~same)
Most negative, got -32767.-9998 (bin frac=-65534),	expected -32767.999985 (~same)
-Infinity, got -INF,	expected -32768.000000 (~same)
Undefined, got UNDEF,	expected -32768.000000 (~same)

Checking extreme int values, part II:
Almost most negative, got -32767.-9998 (bin frac=-65533),	expected -32767.999969 (~same)
 Largest -Largest, got 0.  0 (bin frac=0),	expected 0.000000 (~same)
-Largest +Largest, got 0.  0 (bin frac=0),	expected 0.000000 (~same)
Largest + 0, got 32767.9998 (bin frac=65534),	expected 32767.999985 (~same)
-Largest - 0, got -32767.-9998 (bin frac=-65534),	expected -32767.999985 (~same)
Largest - tiniest, got 32767.9998 (bin frac=65533),	expected 32767.999969 (~same)
Largest + tiniest safe, got +INF,	expected 32768.000000 (~same)
Largest + tiniest unsafe, got +INF,	expected 32768.000000 (~same)
+inf + +inf, got +INF,	expected 32768.000000 (~same)
-inf - +inf, got -INF,	expected -32768.000000 (~same)
+inf + -inf, got UNDEF,	expected -32768.000000 (~same)
-inf + -inf, got -INF,	expected -32768.000000 (~same)
-inf - -inf, got UNDEF,	expected -32768.000000 (~same)
+inf * -inf, got -INF,	expected -32768.000000 (~same)
+inf - 0.5, got +INF,	expected 32768.000000 (~same)
-inf + 0.5, got -INF,	expected -32768.000000 (~same)
+num / zero, got +INF,	expected 32768.000000 (~same)
zero / zero, got UNDEF,	expected -32768.000000 (~same)
zero * zero, got 0.  0 (bin frac=0),	expected 0.000000 (~same)
zero + zero, got 0.  0 (bin frac=0),	expected 0.000000 (~same)
zero - zero, got 0.  0 (bin frac=0),	expected 0.000000 (~same)
-num / zero, got -INF,	expected -32768.000000 (~same)
zero * +inf, got UNDEF,	expected -32768.000000 (~same)
zero * -inf, got UNDEF,	expected -32768.000000 (~same)
zero * undef, got UNDEF,	expected -32768.000000 (~same)
-inf * undef, got UNDEF,	expected -32768.000000 (~same)
+inf * undef, got UNDEF,	expected -32768.000000 (~same)
undef * undef, got UNDEF,	expected -32768.000000 (~same)
tiniest * inf, got +INF,	expected 32768.000000 (~same)

Checking extreme int values, part III:
Way Too Large whole part!, got +INF,	expected 32768.000000 (~same)
Largest * 1, got 32767.9998 (bin frac=65534),	expected 32767.999985 (~same)
Largest * -1, got -32767.-9998 (bin frac=-65534),	expected -32767.999985 (~same)
Largest + two safe, got +INF,	expected 32768.000000 (~same)
Largest + two unsafe, got -32766.  0 (bin frac=-2),	expected -32766.000031 (~same)
Safe Too neg substraction, got -INF,	expected -32768.000000 (~same)
Unsafe Too neg substraction, got 32767.4999 (bin frac=32770),	expected 32767.500038 (~same)
Largest + 0.5, got +INF,	expected 32768.000000 (~same)
-Largest - 0.5, got -INF,	expected -32768.000000 (~same)
+HalfMax + HMaxp2, got +INF,	expected 32768.000000 (~same)
-HalfMax - HMaxp2, got -INF,	expected -32768.000000 (~same)
HalfMax + HalfMax, got 32767.9998 (bin frac=65534),	expected 32767.999985 (~same)
FXP_MAX - HalfMax, got 16383.9999 (bin frac=65535),	expected 16384.000000 (~same)
HalfMax + FXP_MAX, got +INF,	expected 32768.000000 (~same)
-FXP_MAX - HalfMax, got -INF,	expected -32768.000000 (~same)
HalfMax * 2, got 32767.9998 (bin frac=65534),	expected 32767.999985 (~same)
HalfMax * 2 (long), got 32767.9998 (bin frac=65534),	expected 32767.999985 (~same)
HalfMax * 3, got +INF,	expected 32768.000000 (~same)
-HalfMax * 3, got -INF,	expected -32768.000000 (~same)
(HalfMax+0.5)*2, got +INF,	expected 32768.000000 (~same)
(HalfMax+0.5)*2 (long), got +INF,	expected 32768.000000 (~same)

Checking decimal <=> bin mappings of frac ranges:
Max frac dec: 9999 (bin 65535)
Showing fxp for 0.  0: 0.  0 (bin frac=0)
Showing fxp for 0.  1: 0.  0 (bin frac=6)
Showing fxp for 0.  2: 0.  1 (bin frac=13)
Showing fxp for 0.  3: 0.  2 (bin frac=19)
Showing fxp for 0.  4: 0.  3 (bin frac=26)
Showing fxp for 0.  5: 0.  4 (bin frac=32)
:
Showing fxp for 0.4998: 0.4997 (bin frac=32757)
Showing fxp for 0.4999: 0.4998 (bin frac=32764)
Showing fxp for 0.5000: 0.4999 (bin frac=32770)
Showing fxp for 0.5001: 0.5000 (bin frac=32777)
Showing fxp for 0.5002: 0.5001 (bin frac=32783)
:
Showing fxp for 0.9994: 0.9993 (bin frac=65502)
Showing fxp for 0.9995: 0.9994 (bin frac=65508)
Showing fxp for 0.9996: 0.9995 (bin frac=65515)
Showing fxp for 0.9997: 0.9996 (bin frac=65521)
Showing fxp for 0.9998: 0.9997 (bin frac=65528)
Showing fxp for 0.9999: 0.9999 (bin frac=65535)

Checking sign taken from frac when whole == 0:
-0.(+)500, got 0.499 (bin frac=32800),	expected 0.500000 (~same)
-0.(-)500, got -0.-499 (bin frac=-32800),	expected -0.500000 (~same)

Truncation of longer frac decimal arguments:
0.222222, got 0.221 (bin frac=14563),	expected 0.222000 (~same)
0.777777, got 0.776 (bin frac=50971),	expected 0.777000 (~same)
0.991999, got 0.990 (bin frac=65010),	expected 0.991000 (~same)
0.999999, got 0.999 (bin frac=65535),	expected 0.999000 (~same)

Checking extreme frac values:
maxfrac, got 0.9999 (bin frac=65535),	expected 1.000000 (~same)
0.5 + maxfrac, got 1.4999 (bin frac=32767),	expected 1.500000 (~same)
maxfrac +tiniest, got 1.  0 (bin frac=0),	expected 1.000000 (~same)
-maxfrac -tiniest, got -1.  0 (bin frac=0),	expected -1.000000 (~same)
maxfrac - maxfrac, got 0.  0 (bin frac=0),	expected 0.000000 (~same)

Simple ops when using 3 or more bits for the whole part:
 1 + 1, got 2.  0 (bin frac=0),	expected 2.000000 (~same)
-1 - 1, got -2.  0 (bin frac=0),	expected -2.000000 (~same)
Ok sum == 2, got 2.  0 (bin frac=0),	expected 2.000000 (~same)
Ok sum == -2, got -2.  0 (bin frac=0),	expected -2.000000 (~same)
 num, got 0.4999 (bin frac=32767),	expected 0.499992 (~same)
 num +  2, got 2.4999 (bin frac=32767),	expected 2.499992 (~same)
 num + -2, got -1.-4999 (bin frac=-32769),	expected -1.500008 (~same)
-num +  2, got 1.4999 (bin frac=32769),	expected 1.500008 (~same)
-num + -2, got -2.-4999 (bin frac=-32767),	expected -2.499992 (~same)
 num -  2, got -1.-4999 (bin frac=-32769),	expected -1.500008 (~same)
 num - -2, got 2.4999 (bin frac=32767),	expected 2.499992 (~same)
-num -  2, got -2.-4999 (bin frac=-32767),	expected -2.499992 (~same)
-num - -2, got 1.4999 (bin frac=32769),	expected 1.500008 (~same)
 num *  2, got 0.9998 (bin frac=65534),	expected 0.999985 (~same)
 num * -2, got -0.-9998 (bin frac=-65534),	expected -0.999985 (~same)
-num *  2, got -0.-9998 (bin frac=-65534),	expected -0.999985 (~same)
-num * -2, got 0.9998 (bin frac=65534),	expected 0.999985 (~same)
 num *  2 (long), got 0.9998 (bin frac=65534),	expected 0.999985 (~same)
 num * -2 (long), got -0.-9998 (bin frac=-65534),	expected -0.999985 (~same)
-num *  2 (long), got -0.-9998 (bin frac=-65534),	expected -0.999985 (~same)
-num * -2 (long), got 0.9998 (bin frac=65534),	expected 0.999985 (~same)
 num /  2, got 0.2499 (bin frac=16383),	expected 0.249996 (~same)
 num / -2, got -0.-2499 (bin frac=-16383),	expected -0.249996 (~same)
-num /  2, got -0.-2499 (bin frac=-16383),	expected -0.249996 (~same)
-num / -2, got 0.2499 (bin frac=16383),	expected 0.249996 (~same)

Verifying different op implementations using random numbers:
n1 = -32452.-2840 (bin frac=-18615)
n2 = 9244.7496 (bin frac=49132)
n3 = 0.3795 (bin frac=24874) (n3 always random between -1 and 1)
a. sum vs. sum_l, got -23207.-5343 (bin frac=-35019),	expected -23207.534356 (~same)
b. sum vs. sum_l, got -32451.-9044 (bin frac=-59277),	expected -32451.904509 (~same)
c. mul vs. mul_l, got -INF,	expected -32768.000000 (~same)
d. mul vs. mul_d, got -INF,	expected -32768.000000 (~same)
e. mul_l vs. mul_d, got -INF,	expected -32768.000000 (~same)
f. mul vs. mul_l, got -12317.-1708 (bin frac=-11201),	expected -12317.170916 (~same)
g. mul vs. mul_d, got -12317.-1708 (bin frac=-11201),	expected -12317.170932 (~same)
h. mul_l vs. mul_d, got -12317.-1708 (bin frac=-11201),	expected -12317.170932 (~same)
i. div vs. div_l, got -3.-5103 (bin frac=-33446),	expected -3.510353 (~same)
n1 = 8675.4274 (bin frac=28014)
n2 = -22364.-8963 (bin frac=-58749)
n3 = 0.1530 (bin frac=10029) (n3 always random between -1 and 1)
a. sum vs. sum_l, got -13689.-4689 (bin frac=-30735),	expected -13689.468986 (~same)
b. sum vs. sum_l, got 8675.5804 (bin frac=38043),	expected 8675.580499 (~same)
c. mul vs. mul_l, got -INF,	expected -32768.000000 (~same)
d. mul vs. mul_d, got -INF,	expected -32768.000000 (~same)
e. mul_l vs. mul_d, got -INF,	expected -32768.000000 (~same)
f. mul vs. mul_l, got 1327.6040 (bin frac=39589),	expected 1327.604089 (~same)
g. mul vs. mul_d, got 1327.6040 (bin frac=39589),	expected 1327.604089 (~same)
h. mul_l vs. mul_d, got 1327.6040 (bin frac=39589),	expected 1327.604089 (~same)
i. div vs. div_l, got -0.-3878 (bin frac=-25421),	expected -0.387900 (~same)
n1 = 5309.5280 (bin frac=34610)
n2 = 8017.274 (bin frac=1802)
n3 = -0.-4715 (bin frac=-30903) (n3 always random between -1 and 1)
a. sum vs. sum_l, got 13326.5555 (bin frac=36412),	expected 13326.555612 (~same)
b. sum vs. sum_l, got 5309.565 (bin frac=3707),	expected 5309.056565 (~same)
c. mul vs. mul_l, got +INF,	expected 32768.000000 (~same)
d. mul vs. mul_d, got +INF,	expected 32768.000000 (~same)
e. mul_l vs. mul_d, got +INF,	expected 32768.000000 (~same)
f. mul vs. mul_l, got -2503.-6673 (bin frac=-43739),	expected -2503.667414 (~same)
g. mul vs. mul_d, got -2503.-6673 (bin frac=-43739),	expected -2503.667430 (~same)
h. mul_l vs. mul_d, got -2503.-6673 (bin frac=-43739),	expected -2503.667430 (~same)
i. div vs. div_l, got 0.6622 (bin frac=43403),	expected 0.662287 (~same)
n1 = 17050.6955 (bin frac=45585)
n2 = 16881.2221 (bin frac=14557)
n3 = -0.-8338 (bin frac=-54653) (n3 always random between -1 and 1)
a. sum vs. sum_l, got +INF,	expected 32768.000000 (~same)
b. sum vs. sum_l, got 17049.8615 (bin frac=56468),	expected 17049.861646 (~same)
c. mul vs. mul_l, got +INF,	expected 32768.000000 (~same)
d. mul vs. mul_d, got +INF,	expected 32768.000000 (~same)
e. mul_l vs. mul_d, got +INF,	expected 32768.000000 (~same)
f. mul vs. mul_l, got -14219.-2331 (bin frac=-15280),	expected -14219.233173 (~same)
g. mul vs. mul_d, got -14219.-2331 (bin frac=-15280),	expected -14219.233188 (~same)
h. mul_l vs. mul_d, got -14219.-2331 (bin frac=-15281),	expected -14219.233188 (~same)
i. div vs. div_l, got 1.100 (bin frac=657),	expected 1.010025 (~same)
n1 = -9343.-5834 (bin frac=-38242)
n2 = -944.-1568 (bin frac=-10278)
n3 = 0.8761 (bin frac=57422) (n3 always random between -1 and 1)
a. sum vs. sum_l, got -10287.-7402 (bin frac=-48520),	expected -10287.740368 (~same)
b. sum vs. sum_l, got -9342.-7072 (bin frac=-46356),	expected -9342.707347 (~same)
c. mul vs. mul_l, got +INF,	expected 32768.000000 (~same)
d. mul vs. mul_d, got +INF,	expected 32768.000000 (~same)
e. mul_l vs. mul_d, got +INF,	expected 32768.000000 (~same)
f. mul vs. mul_l, got -8186.-7561 (bin frac=-49557),	expected -8186.756191 (~same)
g. mul vs. mul_d, got -8186.-7561 (bin frac=-49557),	expected -8186.756207 (~same)
h. mul_l vs. mul_d, got -8186.-7561 (bin frac=-49557),	expected -8186.756207 (~same)
i. div vs. div_l, got 9.8961 (bin frac=58734),	expected 9.896223 (~same)
n1 = 20802.9985 (bin frac=65446)
n2 = -11690.-9004 (bin frac=-59015)
n3 = 0.8572 (bin frac=56186) (n3 always random between -1 and 1)
a. sum vs. sum_l, got 9112.981 (bin frac=6431),	expected 9112.098131 (~same)
b. sum vs. sum_l, got 20803.8558 (bin frac=56096),	expected 20803.855970 (~same)
c. mul vs. mul_l, got -INF,	expected -32768.000000 (~same)
d. mul vs. mul_d, got -INF,	expected -32768.000000 (~same)
e. mul_l vs. mul_d, got -INF,	expected -32768.000000 (~same)
f. mul vs. mul_l, got 17835.415 (bin frac=2720),	expected 17835.041505 (~same)
g. mul vs. mul_d, got 17835.415 (bin frac=2720),	expected 17835.041505 (~same)
h. mul_l vs. mul_d, got 17835.415 (bin frac=2720),	expected 17835.041505 (~same)
i. div vs. div_l, got -1.-7793 (bin frac=-51079),	expected -1.779416 (~same)
n1 = -12640.-5512 (bin frac=-36128)
n2 = -8648.-3105 (bin frac=-20354)
n3 = -0.-7952 (bin frac=-52119) (n3 always random between -1 and 1)
a. sum vs. sum_l, got -21288.-8617 (bin frac=-56482),	expected -21288.861860 (~same)
b. sum vs. sum_l, got -12641.-3465 (bin frac=-22711),	expected -12641.346548 (~same)
c. mul vs. mul_l, got +INF,	expected 32768.000000 (~same)
d. mul vs. mul_d, got +INF,	expected 32768.000000 (~same)
e. mul_l vs. mul_d, got +INF,	expected 32768.000000 (~same)
f. mul vs. mul_l, got 10052.6868 (bin frac=45019),	expected 10052.686946 (~same)
g. mul vs. mul_d, got 10052.6868 (bin frac=45019),	expected 10052.686946 (~same)
h. mul_l vs. mul_d, got 10052.6868 (bin frac=45019),	expected 10052.686946 (~same)
i. div vs. div_l, got 1.4615 (bin frac=30252),	expected 1.461616 (~same)
n1 = -9832.-6806 (bin frac=-44610)
n2 = 2888.4236 (bin frac=27768)
n3 = 0.5533 (bin frac=36268) (n3 always random between -1 and 1)
a. sum vs. sum_l, got -6944.-2569 (bin frac=-16842),	expected -6944.256992 (~same)
b. sum vs. sum_l, got -9832.-1272 (bin frac=-8342),	expected -9832.127291 (~same)
c. mul vs. mul_l, got -INF,	expected -32768.000000 (~same)
d. mul vs. mul_d, got -INF,	expected -32768.000000 (~same)
e. mul_l vs. mul_d, got -INF,	expected -32768.000000 (~same)
f. mul vs. mul_l, got -5441.-4621 (bin frac=-30287),	expected -5441.462150 (~same)
g. mul vs. mul_d, got -5441.-4621 (bin frac=-30287),	expected -5441.462165 (~same)
h. mul_l vs. mul_d, got -5441.-4621 (bin frac=-30287),	expected -5441.462165 (~same)
i. div vs. div_l, got -3.-4041 (bin frac=-26487),	expected -3.404166 (~same)
n1 = -21607.-6227 (bin frac=-40819)
n2 = 17899.7060 (bin frac=46277)
n3 = 0.150 (bin frac=989) (n3 always random between -1 and 1)
a. sum vs. sum_l, got -3707.-9166 (bin frac=-60078),	expected -3707.916732 (~same)
b. sum vs. sum_l, got -21607.-6077 (bin frac=-39830),	expected -21607.607767 (~same)
c. mul vs. mul_l, got -INF,	expected -32768.000000 (~same)
d. mul vs. mul_d, got -INF,	expected -32768.000000 (~same)
e. mul_l vs. mul_d, got -INF,	expected -32768.000000 (~same)
f. mul vs. mul_l, got -326.-793 (bin frac=-5202),	expected -326.079377 (~same)
g. mul vs. mul_d, got -326.-793 (bin frac=-5202),	expected -326.079393 (~same)
h. mul_l vs. mul_d, got -326.-793 (bin frac=-5202),	expected -326.079393 (~same)
i. div vs. div_l, got -1.-2071 (bin frac=-13575),	expected -1.207141 (~same)
n1 = -14419.-9324 (bin frac=-61117)
n2 = -26192.-6133 (bin frac=-40201)
n3 = 0.7506 (bin frac=49199) (n3 always random between -1 and 1)
a. sum vs. sum_l, got -INF,	expected -32768.000000 (~same)
b. sum vs. sum_l, got -14419.-1818 (bin frac=-11918),	expected -14419.181857 (~same)
c. mul vs. mul_l, got +INF,	expected 32768.000000 (~same)
d. mul vs. mul_d, got +INF,	expected 32768.000000 (~same)
e. mul_l vs. mul_d, got +INF,	expected 32768.000000 (~same)
f. mul vs. mul_l, got -10825.-2908 (bin frac=-19061),	expected -10825.290867 (~same)
g. mul vs. mul_d, got -10825.-2908 (bin frac=-19061),	expected -10825.290883 (~same)
h. mul_l vs. mul_d, got -10825.-2908 (bin frac=-19062),	expected -10825.290883 (~same)
i. div vs. div_l, got 0.5504 (bin frac=36079),	expected 0.550530 (~same)

0 Warnings for 16 frac bits.
Largest delta was: 3.051804E-05
All tests passed using 16-bit fracs, and '9999' as max decimal frac.


========================
FXP configuration parameters:
frac bits   : 24 (requested was 24)
whole bits  : 8
pos infinity: 2147483647 (Lf: 128.000000)
whole max   : 127
frac mask   : 16777215
frac max    : 16777215 (->decimals: .9999999)
whole min   : -127
neg infinity: -2147483647 (Lf: -128.000000)
undefined   : -2147483648 (Lf: -128.000000)
max_ok_delta: 5.580017E-04
max_delta   : 9.765030E-04

Checking extreme int values, part I:
Infinity, got +INF,	expected 128.000000 (~same)
Largest, got 127.9999998 (bin frac=16777214),	expected 128.000000 (~same)
HalfMax, got 63.9999999 (bin frac=16777215),	expected 64.000000 (~same)
Largest frac, got 0.9999999 (bin frac=16777215),	expected 1.000000 (~same)
tiniest, got 0.  0 (bin frac=1),	expected 0.000000 (~same)
0.5, got 0.4999999 (bin frac=8388608),	expected 0.500000 (~same)
zero, got 0.  0 (bin frac=0),	expected 0.000000 (~same)
-tiniest, got -0.  0 (bin frac=-1),	expected -0.000000 (~same)
-Largest frac, got -0.-9999999 (bin frac=-16777215),	expected -1.000000 (~same)
Most negative, got -127.-9999998 (bin frac=-16777214),	expected -128.000000 (~same)
-Infinity, got -INF,	expected -128.000000 (~same)
Undefined, got UNDEF,	expected -128.000000 (~same)

Checking extreme int values, part II:
Almost most negative, got -127.-9999997 (bin frac=-16777213),	expected -128.000000 (~same)
 Largest -Largest, got 0.  0 (bin frac=0),	expected 0.000000 (~same)
-Largest +Largest, got 0.  0 (bin frac=0),	expected 0.000000 (~same)
Largest + 0, got 127.9999998 (bin frac=16777214),	expected 128.000000 (~same)
-Largest - 0, got -127.-9999998 (bin frac=-16777214),	expected -128.000000 (~same)
Largest - tiniest, got 127.9999997 (bin frac=16777213),	expected 128.000000 (~same)
Largest + tiniest safe, got +INF,	expected 128.000000 (~same)
Largest + tiniest unsafe, got +INF,	expected 128.000000 (~same)
+inf + +inf, got +INF,	expected 128.000000 (~same)
-inf - +inf, got -INF,	expected -128.000000 (~same)
+inf + -inf, got UNDEF,	expected -128.000000 (~same)
-inf + -inf, got -INF,	expected -128.000000 (~same)
-inf - -inf, got UNDEF,	expected -128.000000 (~same)
+inf * -inf, got -INF,	expected -128.000000 (~same)
+inf - 0.5, got +INF,	expected 128.000000 (~same)
-inf + 0.5, got -INF,	expected -128.000000 (~same)
+num / zero, got +INF,	expected 128.000000 (~same)
zero / zero, got UNDEF,	expected -128.000000 (~same)
zero * zero, got 0.  0 (bin frac=0),	expected 0.000000 (~same)
zero + zero, got 0.  0 (bin frac=0),	expected 0.000000 (~same)
zero - zero, got 0.  0 (bin frac=0),	expected 0.000000 (~same)
-num / zero, got -INF,	expected -128.000000 (~same)
zero * +inf, got UNDEF,	expected -128.000000 (~same)
zero * -inf, got UNDEF,	expected -128.000000 (~same)
zero * undef, got UNDEF,	expected -128.000000 (~same)
-inf * undef, got UNDEF,	expected -128.000000 (~same)
+inf * undef, got UNDEF,	expected -128.000000 (~same)
undef * undef, got UNDEF,	expected -128.000000 (~same)
tiniest * inf, got +INF,	expected 128.000000 (~same)

Checking extreme int values, part III:
Way Too Large whole part!, got +INF,	expected 128.000000 (~same)
Largest * 1, got 127.9999998 (bin frac=16777214),	expected 128.000000 (~same)
Largest * -1, got -127.-9999998 (bin frac=-16777214),	expected -128.000000 (~same)
Largest + two safe, got +INF,	expected 128.000000 (~same)
Largest + two unsafe, got -126. -1 (bin frac=-2),	expected -126.000000 (~same)
Safe Too neg substraction, got -INF,	expected -128.000000 (~same)
Unsafe Too neg substraction, got 127.5000000 (bin frac=8388610),	expected 127.500000 (~same)
Largest + 0.5, got +INF,	expected 128.000000 (~same)
-Largest - 0.5, got -INF,	expected -128.000000 (~same)
+HalfMax + HMaxp2, got +INF,	expected 128.000000 (~same)
-HalfMax - HMaxp2, got -INF,	expected -128.000000 (~same)
HalfMax + HalfMax, got 127.9999998 (bin frac=16777214),	expected 128.000000 (~same)
FXP_MAX - HalfMax, got 63.9999999 (bin frac=16777215),	expected 64.000000 (~same)
HalfMax + FXP_MAX, got +INF,	expected 128.000000 (~same)
-FXP_MAX - HalfMax, got -INF,	expected -128.000000 (~same)
HalfMax * 2, got 127.9999998 (bin frac=16777214),	expected 128.000000 (~same)
HalfMax * 2 (long), got 127.9999998 (bin frac=16777214),	expected 128.000000 (~same)
HalfMax * 3, got +INF,	expected 128.000000 (~same)
-HalfMax * 3, got -INF,	expected -128.000000 (~same)
(HalfMax+0.5)*2, got +INF,	expected 128.000000 (~same)
(HalfMax+0.5)*2 (long), got +INF,	expected 128.000000 (~same)

Checking decimal <=> bin mappings of frac ranges:
Max frac dec: 9999999 (bin 16777215)
Showing fxp for 0.  0: 0.  0 (bin frac=0)
Showing fxp for 0.  1: 0.  0 (bin frac=1)
Showing fxp for 0.  2: 0.  1 (bin frac=3)
Showing fxp for 0.  3: 0.  2 (bin frac=5)
Showing fxp for 0.  4: 0.  3 (bin frac=6)
Showing fxp for 0.  5: 0.  4 (bin frac=8)
:
Showing fxp for 0.4999998: 0.4999997 (bin frac=8388604)
Showing fxp for 0.4999999: 0.4999998 (bin frac=8388606)
Showing fxp for 0.5000000: 0.4999999 (bin frac=8388608)
Showing fxp for 0.5000001: 0.5000000 (bin frac=8388610)
Showing fxp for 0.5000002: 0.5000001 (bin frac=8388611)
:
Showing fxp for 0.9999994: 0.9999993 (bin frac=16777206)
Showing fxp for 0.9999995: 0.9999994 (bin frac=16777208)
Showing fxp for 0.9999996: 0.9999995 (bin frac=16777209)
Showing fxp for 0.9999997: 0.9999996 (bin frac=16777211)
Showing fxp for 0.9999998: 0.9999997 (bin frac=16777213)
Showing fxp for 0.9999999: 0.9999999 (bin frac=16777215)

Checking sign taken from frac when whole == 0:
-0.(+)500, got 0.499 (bin frac=8397004),	expected 0.500000 (~same)
-0.(-)500, got -0.-499 (bin frac=-8397004),	expected -0.500000 (~same)

Truncation of longer frac decimal arguments:
0.222222, got 0.222 (bin frac=3728270),	expected 0.222000 (~same)
0.777777, got 0.777 (bin frac=13048945),	expected 0.777000 (~same)
0.991999, got 0.990 (bin frac=16642862),	expected 0.991000 (~same)
0.999999, got 0.999 (bin frac=16777215),	expected 0.999000 (~same)

Checking extreme frac values:
maxfrac, got 0.9999999 (bin frac=16777215),	expected 1.000000 (~same)
0.5 + maxfrac, got 1.4999999 (bin frac=8388607),	expected 1.500000 (~same)
maxfrac +tiniest, got 1.  0 (bin frac=0),	expected 1.000000 (~same)
-maxfrac -tiniest, got -1.  0 (bin frac=0),	expected -1.000000 (~same)
maxfrac - maxfrac, got 0.  0 (bin frac=0),	expected 0.000000 (~same)

Simple ops when using 3 or more bits for the whole part:
 1 + 1, got 2.  0 (bin frac=0),	expected 2.000000 (~same)
-1 - 1, got -2.  0 (bin frac=0),	expected -2.000000 (~same)
Ok sum == 2, got 2.  0 (bin frac=0),	expected 2.000000 (~same)
Ok sum == -2, got -2.  0 (bin frac=0),	expected -2.000000 (~same)
 num, got 0.4999999 (bin frac=8388607),	expected 0.500000 (~same)
 num +  2, got 2.4999999 (bin frac=8388607),	expected 2.500000 (~same)
 num + -2, got -1.-5000000 (bin frac=-8388609),	expected -1.500000 (~same)
-num +  2, got 1.5000000 (bin frac=8388609),	expected 1.500000 (~same)
-num + -2, got -2.-4999999 (bin frac=-8388607),	expected -2.500000 (~same)
 num -  2, got -1.-5000000 (bin frac=-8388609),	expected -1.500000 (~same)
 num - -2, got 2.4999999 (bin frac=8388607),	expected 2.500000 (~same)
-num -  2, got -2.-4999999 (bin frac=-8388607),	expected -2.500000 (~same)
-num - -2, got 1.5000000 (bin frac=8388609),	expected 1.500000 (~same)
 num *  2, got 0.9999998 (bin frac=16777214),	expected 1.000000 (~same)
 num * -2, got -0.-9999998 (bin frac=-16777214),	expected -1.000000 (~same)
-num *  2, got -0.-9999998 (bin frac=-16777214),	expected -1.000000 (~same)
-num * -2, got 0.9999998 (bin frac=16777214),	expected 1.000000 (~same)
 num *  2 (long), got 0.9999998 (bin frac=16777214),	expected 1.000000 (~same)
 num * -2 (long), got -0.-9999998 (bin frac=-16777214),	expected -1.000000 (~same)
-num *  2 (long), got -0.-9999998 (bin frac=-16777214),	expected -1.000000 (~same)
-num * -2 (long), got 0.9999998 (bin frac=16777214),	expected 1.000000 (~same)
 num /  2, got 0.2499999 (bin frac=4194303),	expected 0.250000 (~same)
 num / -2, got -0.-2499999 (bin frac=-4194303),	expected -0.250000 (~same)
-num /  2, got -0.-2499999 (bin frac=-4194303),	expected -0.250000 (~same)
-num / -2, got 0.2499999 (bin frac=4194303),	expected 0.250000 (~same)

Verifying different op implementations using random numbers:
n1 = -55.-2120301 (bin frac=-3557275)
n2 = -99.-4538326 (bin frac=-7614049)
n3 = 0.2065907 (bin frac=3466017) (n3 always random between -1 and 1)
a. sum vs. sum_l, got -INF,	expected -128.000000 (~same)
b. sum vs. sum_l, got -55.-54394 (bin frac=-91258),	expected -55.005439 (~same)
c. mul vs. mul_l, got +INF,	expected 128.000000 (~same)
d. mul vs. mul_d, got +INF,	expected 128.000000 (~same)
e. mul_l vs. mul_d, got +INF,	expected 128.000000 (~same)
f. mul vs. mul_l, got -11.-4062918 (bin frac=-6816446),	expected -11.406293 (~same)
g. mul vs. mul_d, got -11.-4062918 (bin frac=-6816446),	expected -11.406293 (~same)
h. mul_l vs. mul_d, got -11.-4062925 (bin frac=-6816458),	expected -11.406293 (~same)
i. div vs. div_l, got 0.5551523 (bin frac=9313911),	expected 0.555152 (~same)
n1 = -8.-1928839 (bin frac=-3236056)
n2 = 119.6290707 (bin frac=10554056)
n3 = 0.8831304 (bin frac=14816471) (n3 always random between -1 and 1)
a. sum vs. sum_l, got 111.4361867 (bin frac=7318000),	expected 111.436187 (~same)
b. sum vs. sum_l, got -7.-3097534 (bin frac=-5196801),	expected -7.309753 (~same)
c. mul vs. mul_l, got -INF,	expected -128.000000 (~same)
d. mul vs. mul_d, got -INF,	expected -128.000000 (~same)
e. mul_l vs. mul_d, got -INF,	expected -128.000000 (~same)
f. mul vs. mul_l, got -7.-2353818 (bin frac=-3949053),	expected -7.235386 (~same)
g. mul vs. mul_d, got -7.-2353818 (bin frac=-3949053),	expected -7.235386 (~same)
h. mul_l vs. mul_d, got -7.-2353855 (bin frac=-3949115),	expected -7.235386 (~same)
i. div vs. div_l, got -0.-684856 (bin frac=-1148999),	expected -0.068486 (~same)
n1 = 6.1956443 (bin frac=3282368)
n2 = -7.-789440 (bin frac=-1324462)
n3 = 0.7085966 (bin frac=11888280) (n3 always random between -1 and 1)
a. sum vs. sum_l, got -0.-8832996 (bin frac=-14819310),	expected -0.883300 (~same)
b. sum vs. sum_l, got 6.9042410 (bin frac=15170648),	expected 6.904241 (~same)
c. mul vs. mul_l, got -43.-8586195 (bin frac=-14405247),	expected -43.858620 (~same)
d. mul vs. mul_d, got -43.-8586195 (bin frac=-14405247),	expected -43.858620 (~same)
e. mul_l vs. mul_d, got -43.-8586200 (bin frac=-14405255),	expected -43.858620 (~same)
f. mul vs. mul_l, got 4.3902087 (bin frac=6546616),	expected 4.390213 (~same)
g. mul vs. mul_d, got 4.3902087 (bin frac=6546616),	expected 4.390213 (~same)
h. mul_l vs. mul_d, got 4.3902131 (bin frac=6546691),	expected 4.390213 (~same)
i. div vs. div_l, got -0.-8752214 (bin frac=-14683780),	expected -0.875222 (~same)
n1 = 65.7693009 (bin frac=12906728)
n2 = -113.-1037123 (bin frac=-1740004)
n3 = -0.-9457680 (bin frac=-15867355) (n3 always random between -1 and 1)
a. sum vs. sum_l, got -47.-3344113 (bin frac=-5610492),	expected -47.334411 (~same)
b. sum vs. sum_l, got 64.8235328 (bin frac=13816589),	expected 64.823533 (~same)
c. mul vs. mul_l, got -INF,	expected -128.000000 (~same)
d. mul vs. mul_d, got -INF,	expected -128.000000 (~same)
e. mul_l vs. mul_d, got -INF,	expected -128.000000 (~same)
f. mul vs. mul_l, got -62.-2024691 (bin frac=-3396869),	expected -62.202504 (~same)
g. mul vs. mul_d, got -62.-2024691 (bin frac=-3396869),	expected -62.202504 (~same)
h. mul_l vs. mul_d, got -62.-2025040 (bin frac=-3397454),	expected -62.202504 (~same)
i. div vs. div_l, got -0.-5814954 (bin frac=-9755875),	expected -0.581495 (~same)
n1 = 68.7032193 (bin frac=11798064)
n2 = 80.7328746 (bin frac=12295597)
n3 = 0.771896 (bin frac=1295028) (n3 always random between -1 and 1)
a. sum vs. sum_l, got +INF,	expected 128.000000 (~same)
b. sum vs. sum_l, got 68.7804090 (bin frac=13093092),	expected 68.780409 (~same)
c. mul vs. mul_l, got +INF,	expected 128.000000 (~same)
d. mul vs. mul_d, got +INF,	expected 128.000000 (~same)
e. mul_l vs. mul_d, got +INF,	expected 128.000000 (~same)
f. mul vs. mul_l, got 5.3031787 (bin frac=5086495),	expected 5.303180 (~same)
g. mul vs. mul_d, got 5.3031787 (bin frac=5086495),	expected 5.303180 (~same)
h. mul_l vs. mul_d, got 5.3031797 (bin frac=5086512),	expected 5.303180 (~same)
i. div vs. div_l, got 0.8509942 (bin frac=14277315),	expected 0.850994 (~same)
n1 = -54.-8803878 (bin frac=-14770457)
n2 = -127.-7127210 (bin frac=-11957476)
n3 = 0.7231409 (bin frac=12132293) (n3 always random between -1 and 1)
a. sum vs. sum_l, got -INF,	expected -128.000000 (~same)
b. sum vs. sum_l, got -54.-1572468 (bin frac=-2638164),	expected -54.157247 (~same)
c. mul vs. mul_l, got +INF,	expected 128.000000 (~same)
d. mul vs. mul_d, got +INF,	expected 128.000000 (~same)
e. mul_l vs. mul_d, got +INF,	expected 128.000000 (~same)
f. mul vs. mul_l, got -39.-6862368 (bin frac=-11513144),	expected -39.686259 (~same)
g. mul vs. mul_d, got -39.-6862368 (bin frac=-11513144),	expected -39.686259 (~same)
h. mul_l vs. mul_d, got -39.-6862593 (bin frac=-11513521),	expected -39.686259 (~same)
i. div vs. div_l, got 0.4297174 (bin frac=7209462),	expected 0.429717 (~same)
n1 = 51.1876364 (bin frac=3148018)
n2 = 34.6741525 (bin frac=11310404)
n3 = -0.-6041252 (bin frac=-10135540) (n3 always random between -1 and 1)
a. sum vs. sum_l, got 85.8617890 (bin frac=14458422),	expected 85.861789 (~same)
b. sum vs. sum_l, got 50.5835112 (bin frac=9789694),	expected 50.583511 (~same)
c. mul vs. mul_l, got +INF,	expected 128.000000 (~same)
d. mul vs. mul_d, got +INF,	expected 128.000000 (~same)
e. mul_l vs. mul_d, got +INF,	expected 128.000000 (~same)
f. mul vs. mul_l, got -30.-9237373 (bin frac=-15497742),	expected -30.923744 (~same)
g. mul vs. mul_d, got -30.-9237373 (bin frac=-15497742),	expected -30.923744 (~same)
h. mul_l vs. mul_d, got -30.-9237442 (bin frac=-15497857),	expected -30.923744 (~same)
i. div vs. div_l, got 1.4762475 (bin frac=7990109),	expected 1.476248 (~same)
n1 = -105.-4964471 (bin frac=-8329001)
n2 = -117.-8498941 (bin frac=-14258859)
n3 = -0.-3531105 (bin frac=-5924213) (n3 always random between -1 and 1)
a. sum vs. sum_l, got -INF,	expected -128.000000 (~same)
b. sum vs. sum_l, got -105.-8495577 (bin frac=-14253214),	expected -105.849558 (~same)
c. mul vs. mul_l, got +INF,	expected 128.000000 (~same)
d. mul vs. mul_d, got +INF,	expected 128.000000 (~same)
e. mul_l vs. mul_d, got +INF,	expected 128.000000 (~same)
f. mul vs. mul_l, got 37.2519106 (bin frac=4226359),	expected 37.251915 (~same)
g. mul vs. mul_d, got 37.2519106 (bin frac=4226359),	expected 37.251915 (~same)
h. mul_l vs. mul_d, got 37.2519149 (bin frac=4226431),	expected 37.251915 (~same)
i. div vs. div_l, got 0.8951763 (bin frac=15018568),	expected 0.895176 (~same)
n1 = 48.2300765 (bin frac=3860044)
n2 = 22.3469004 (bin frac=5820024)
n3 = -0.-1557593 (bin frac=-2613209) (n3 always random between -1 and 1)
a. sum vs. sum_l, got 70.5769769 (bin frac=9680068),	expected 70.576977 (~same)
b. sum vs. sum_l, got 48.743171 (bin frac=1246835),	expected 48.074317 (~same)
c. mul vs. mul_l, got +INF,	expected 128.000000 (~same)
d. mul vs. mul_d, got +INF,	expected 128.000000 (~same)
e. mul_l vs. mul_d, got +INF,	expected 128.000000 (~same)
f. mul vs. mul_l, got -7.-5122864 (bin frac=-8594740),	expected -7.512288 (~same)
g. mul vs. mul_d, got -7.-5122864 (bin frac=-8594740),	expected -7.512288 (~same)
h. mul_l vs. mul_d, got -7.-5122874 (bin frac=-8594758),	expected -7.512288 (~same)
i. div vs. div_l, got 2.1582445 (bin frac=2654903),	expected 2.158245 (~same)
n1 = -71.-9381306 (bin frac=-15739221)
n2 = 65.8032905 (bin frac=13476979)
n3 = -0.-2936458 (bin frac=-4926560) (n3 always random between -1 and 1)
a. sum vs. sum_l, got -6.-1348401 (bin frac=-2262242),	expected -6.134840 (~same)
b. sum vs. sum_l, got -72.-2317765 (bin frac=-3888565),	expected -72.231777 (~same)
c. mul vs. mul_l, got -INF,	expected -128.000000 (~same)
d. mul vs. mul_d, got -INF,	expected -128.000000 (~same)
e. mul_l vs. mul_d, got -INF,	expected -128.000000 (~same)
f. mul vs. mul_l, got 21.1243227 (bin frac=2085790),	expected 21.124334 (~same)
g. mul vs. mul_d, got 21.1243227 (bin frac=2085790),	expected 21.124334 (~same)
h. mul_l vs. mul_d, got 21.1243341 (bin frac=2085981),	expected 21.124334 (~same)
i. div vs. div_l, got -1.-932299 (bin frac=-1564139),	expected -1.093230 (~same)

0 Warnings for 24 frac bits.
Largest delta was: 3.492832E-05
All tests passed using 24-bit fracs, and '9999999' as max decimal frac.


========================
FXP configuration parameters:
frac bits   : 31 (requested was 31)
whole bits  : 1
pos infinity: 2147483647 (Lf: 1.000000)
whole max   : 0
frac mask   : 2147483647
frac max    : 2147483646 (->decimals: .9999999)
whole min   : 0
neg infinity: -2147483647 (Lf: -1.000000)
undefined   : -2147483648 (Lf: -1.000000)
max_ok_delta: 6.975420E-05
max_delta   : 1.220698E-04

Checking extreme int values, part I:
Infinity, got +INF,	expected 1.000000 (~same)
Largest, got 0.9999999 (bin frac=2147483646),	expected 1.000000 (~same)
HalfMax, got 0.4999999 (bin frac=1073741823),	expected 0.500000 (~same)
Largest frac, got 0.9999999 (bin frac=2147483646),	expected 1.000000 (~same)
tiniest, got 0.  0 (bin frac=1),	expected 0.000000 (~same)
0.5, got 0.4999999 (bin frac=1073741824),	expected 0.500000 (~same)
zero, got 0.  0 (bin frac=0),	expected 0.000000 (~same)
-tiniest, got -0.  0 (bin frac=-1),	expected -0.000000 (~same)
-Largest frac, got -0.-9999999 (bin frac=-2147483646),	expected -1.000000 (~same)
Most negative, got -0.-9999999 (bin frac=-2147483646),	expected -1.000000 (~same)
-Infinity, got -INF,	expected -1.000000 (~same)
Undefined, got UNDEF,	expected -1.000000 (~same)

Checking extreme int values, part II:
Almost most negative, got -0.-9999998 (bin frac=-2147483645),	expected -1.000000 (~same)
 Largest -Largest, got 0.  0 (bin frac=0),	expected 0.000000 (~same)
-Largest +Largest, got 0.  0 (bin frac=0),	expected 0.000000 (~same)
Largest + 0, got 0.9999999 (bin frac=2147483646),	expected 1.000000 (~same)
-Largest - 0, got -0.-9999999 (bin frac=-2147483646),	expected -1.000000 (~same)
Largest - tiniest, got 0.9999998 (bin frac=2147483645),	expected 1.000000 (~same)
Largest + tiniest safe, got +INF,	expected 1.000000 (~same)
Largest + tiniest unsafe, got +INF,	expected 1.000000 (~same)
+inf + +inf, got +INF,	expected 1.000000 (~same)
-inf - +inf, got -INF,	expected -1.000000 (~same)
+inf + -inf, got UNDEF,	expected -1.000000 (~same)
-inf + -inf, got -INF,	expected -1.000000 (~same)
-inf - -inf, got UNDEF,	expected -1.000000 (~same)
+inf * -inf, got -INF,	expected -1.000000 (~same)
+inf - 0.5, got +INF,	expected 1.000000 (~same)
-inf + 0.5, got -INF,	expected -1.000000 (~same)
+num / zero, got +INF,	expected 1.000000 (~same)
zero / zero, got UNDEF,	expected -1.000000 (~same)
zero * zero, got 0.  0 (bin frac=0),	expected 0.000000 (~same)
zero + zero, got 0.  0 (bin frac=0),	expected 0.000000 (~same)
zero - zero, got 0.  0 (bin frac=0),	expected 0.000000 (~same)
-num / zero, got -INF,	expected -1.000000 (~same)
zero * +inf, got UNDEF,	expected -1.000000 (~same)
zero * -inf, got UNDEF,	expected -1.000000 (~same)
zero * undef, got UNDEF,	expected -1.000000 (~same)
-inf * undef, got UNDEF,	expected -1.000000 (~same)
+inf * undef, got UNDEF,	expected -1.000000 (~same)
undef * undef, got UNDEF,	expected -1.000000 (~same)
tiniest * inf, got +INF,	expected 1.000000 (~same)

Checking extreme int values, part III:
Way Too Large whole part!, got +INF,	expected 1.000000 (~same)
Largest * 1, got +INF,	expected 1.000000 (~same)
Largest * -1, got -INF,	expected -1.000000 (~same)
Largest + two safe, got +INF,	expected 1.000000 (~same)
Largest + two unsafe, got -0.  0 (bin frac=-3),	expected -0.000000 (~same)
Safe Too neg substraction, got -INF,	expected -1.000000 (~same)
Unsafe Too neg substraction, got 0.4999999 (bin frac=1073741826),	expected 0.500000 (~same)
Largest + 0.5, got +INF,	expected 1.000000 (~same)
-Largest - 0.5, got -INF,	expected -1.000000 (~same)
+HalfMax + HMaxp2, got +INF,	expected 1.000000 (~same)
-HalfMax - HMaxp2, got -INF,	expected -1.000000 (~same)
HalfMax + HalfMax, got 0.9999999 (bin frac=2147483646),	expected 1.000000 (~same)
FXP_MAX - HalfMax, got 0.4999999 (bin frac=1073741823),	expected 0.500000 (~same)
HalfMax + FXP_MAX, got +INF,	expected 1.000000 (~same)
-FXP_MAX - HalfMax, got -INF,	expected -1.000000 (~same)
HalfMax * 2, got +INF,	expected 1.000000 (~same)
HalfMax * 2 (long), got +INF,	expected 1.000000 (~same)
HalfMax * 3, got +INF,	expected 1.000000 (~same)
-HalfMax * 3, got -INF,	expected -1.000000 (~same)
(HalfMax+0.5)*2, got +INF,	expected 1.000000 (~same)
(HalfMax+0.5)*2 (long), got +INF,	expected 1.000000 (~same)

Checking decimal <=> bin mappings of frac ranges:
Max frac dec: 9999999 (bin 2147483646)
Showing fxp for 0.  0: 0.  0 (bin frac=0)
Showing fxp for 0.  1: 0.  0 (bin frac=214)
Showing fxp for 0.  2: 0.  1 (bin frac=429)
Showing fxp for 0.  3: 0.  2 (bin frac=644)
Showing fxp for 0.  4: 0.  3 (bin frac=858)
Showing fxp for 0.  5: 0.  4 (bin frac=1073)
:
Showing fxp for 0.4999998: 0.4999997 (bin frac=1073741500)
Showing fxp for 0.4999999: 0.4999998 (bin frac=1073741715)
Showing fxp for 0.5000000: 0.4999999 (bin frac=1073741930)
Showing fxp for 0.5000001: 0.5000000 (bin frac=1073742145)
Showing fxp for 0.5000002: 0.5000001 (bin frac=1073742359)
:
Showing fxp for 0.9999994: 0.9999993 (bin frac=2147482572)
Showing fxp for 0.9999995: 0.9999994 (bin frac=2147482787)
Showing fxp for 0.9999996: 0.9999995 (bin frac=2147483001)
Showing fxp for 0.9999997: 0.9999996 (bin frac=2147483216)
Showing fxp for 0.9999998: 0.9999997 (bin frac=2147483431)
Showing fxp for 0.9999999: 0.9999999 (bin frac=2147483646)

Checking sign taken from frac when whole == 0:
-0.(+)500, got 0.499 (bin frac=1074816639),	expected 0.500000 (~same)
-0.(-)500, got -0.-499 (bin frac=-1074816639),	expected -0.500000 (~same)

Truncation of longer frac decimal arguments:
0.222222, got 0.222 (bin frac=477218588),	expected 0.222000 (~same)
0.777777, got 0.777 (bin frac=1670265058),	expected 0.777000 (~same)
0.991999, got 0.990 (bin frac=2130286579),	expected 0.991000 (~same)
0.999999, got 0.999 (bin frac=2147483646),	expected 0.999000 (~same)

Checking extreme frac values:
maxfrac, got 0.9999999 (bin frac=2147483646),	expected 1.000000 (~same)
0.5 + maxfrac, got +INF,	expected 1.000000 (~same)
maxfrac +tiniest, got +INF,	expected 1.000000 (~same)
-maxfrac -tiniest, got -INF,	expected -1.000000 (~same)
maxfrac - maxfrac, got 0.  0 (bin frac=0),	expected 0.000000 (~same)

Verifying different op implementations using random numbers:
n1 = 0.22235 (bin frac=4775122)
n2 = 0.2423832 (bin frac=520514121)
n3 = 0.3555238 (bin frac=763481640) (n3 always random between -1 and 1)
a. sum vs. sum_l, got 0.2446068 (bin frac=525289243),	expected 0.244607 (~same)
b. sum vs. sum_l, got 0.3577473 (bin frac=768256762),	expected 0.357747 (~same)
c. mul vs. mul_l, got 0.5389 (bin frac=1157365),	expected 0.000539 (~same)
d. mul vs. mul_d, got 0.5389 (bin frac=1157365),	expected 0.000539 (~same)
e. mul_l vs. mul_d, got 0.5389 (bin frac=1157409),	expected 0.000539 (~same)
f. mul vs. mul_l, got 0.7905 (bin frac=1697596),	expected 0.000791 (~same)
g. mul vs. mul_d, got 0.7905 (bin frac=1697596),	expected 0.000791 (~same)
h. mul_l vs. mul_d, got 0.7905 (bin frac=1697669),	expected 0.000791 (~same)
i. div vs. div_l, got 0.91738 (bin frac=19700707),	expected 0.009174 (~same)
n1 = -0.-6873656 (bin frac=-1476106612)
n2 = -0.-5570286 (bin frac=-1196209975)
n3 = 0.8333004 (bin frac=1789499353) (n3 always random between -1 and 1)
a. sum vs. sum_l, got -INF,	expected -1.000000 (~same)
b. sum vs. sum_l, got 0.1459348 (bin frac=313392741),	expected 0.145935 (~same)
c. mul vs. mul_l, got 0.3828676 (bin frac=822202115),	expected 0.382882 (~same)
d. mul vs. mul_d, got 0.3828676 (bin frac=822202115),	expected 0.382882 (~same)
e. mul_l vs. mul_d, got 0.3828823 (bin frac=822233712),	expected 0.382882 (~same)
f. mul vs. mul_l, got -0.-5727672 (bin frac=-1230008335),	expected -0.572782 (~same)
g. mul vs. mul_d, got -0.-5727672 (bin frac=-1230008335),	expected -0.572782 (~same)
h. mul_l vs. mul_d, got -0.-5727821 (bin frac=-1230040484),	expected -0.572782 (~same)
i. div vs. div_l, got +INF,	expected 1.000000 (~same)
n1 = 0.5457897 (bin frac=1172074684)
n2 = 0.5302099 (bin frac=1138617292)
n3 = 0.6263016 (bin frac=1344972655) (n3 always random between -1 and 1)
a. sum vs. sum_l, got +INF,	expected 1.000000 (~same)
b. sum vs. sum_l, got +INF,	expected 1.000000 (~same)
c. mul vs. mul_l, got 0.2893690 (bin frac=621415348),	expected 0.289383 (~same)
d. mul vs. mul_d, got 0.2893690 (bin frac=621415348),	expected 0.289383 (~same)
e. mul_l vs. mul_d, got 0.2893831 (bin frac=621445711),	expected 0.289383 (~same)
f. mul vs. mul_l, got 0.3418097 (bin frac=734030896),	expected 0.341829 (~same)
g. mul vs. mul_d, got 0.3418097 (bin frac=734030896),	expected 0.341829 (~same)
h. mul_l vs. mul_d, got 0.3418290 (bin frac=734072364),	expected 0.341829 (~same)
i. div vs. div_l, got +INF,	expected 1.000000 (~same)
n1 = -0.-4942674 (bin frac=-1061431356)
n2 = 0.4945467 (bin frac=1062031224)
n3 = -0.-4616493 (bin frac=-991384440) (n3 always random between -1 and 1)
a. sum vs. sum_l, got 0.2793 (bin frac=599868),	expected 0.000279 (~same)
b. sum vs. sum_l, got -0.-9559167 (bin frac=-2052815796),	expected -0.955917 (~same)
c. mul vs. mul_l, got -0.-2444313 (bin frac=-524912360),	expected -0.244438 (~same)
d. mul vs. mul_d, got -0.-2444313 (bin frac=-524912360),	expected -0.244438 (~same)
e. mul_l vs. mul_d, got -0.-2444383 (bin frac=-524927509),	expected -0.244438 (~same)
f. mul vs. mul_l, got 0.2281748 (bin frac=490001882),	expected 0.228178 (~same)
g. mul vs. mul_d, got 0.2281748 (bin frac=490001882),	expected 0.228178 (~same)
h. mul_l vs. mul_d, got 0.2281782 (bin frac=490009100),	expected 0.228178 (~same)
i. div vs. div_l, got -0.-9994350 (bin frac=-2146270682),	expected -0.999435 (~same)
n1 = 0.6248652 (bin frac=1341887975)
n2 = -0.-7688746 (bin frac=-1651145930)
n3 = 0.9530817 (bin frac=2046727725) (n3 always random between -1 and 1)
a. sum vs. sum_l, got -0.-1440094 (bin frac=-309257955),	expected -0.144009 (~same)
b. sum vs. sum_l, got +INF,	expected 1.000000 (~same)
c. mul vs. mul_l, got -0.-4804317 (bin frac=-1031719494),	expected -0.480443 (~same)
d. mul vs. mul_d, got -0.-4804317 (bin frac=-1031719494),	expected -0.480443 (~same)
e. mul_l vs. mul_d, got -0.-4804430 (bin frac=-1031743766),	expected -0.480443 (~same)
f. mul vs. mul_l, got 0.5955340 (bin frac=1278899730),	expected 0.595548 (~same)
g. mul vs. mul_d, got 0.5955340 (bin frac=1278899730),	expected 0.595548 (~same)
h. mul_l vs. mul_d, got 0.5955477 (bin frac=1278929096),	expected 0.595548 (~same)
i. div vs. div_l, got -0.-8127009 (bin frac=-1745262142),	expected -0.812701 (~same)
n1 = 0.7739899 (bin frac=1662130982)
n2 = 0.9821553 (bin frac=2109162834)
n3 = -0.-90953 (bin frac=-19532198) (n3 always random between -1 and 1)
a. sum vs. sum_l, got +INF,	expected 1.000000 (~same)
b. sum vs. sum_l, got 0.7648945 (bin frac=1642598784),	expected 0.764895 (~same)
c. mul vs. mul_l, got 0.7601689 (bin frac=1632450492),	expected 0.760179 (~same)
d. mul vs. mul_d, got 0.7601689 (bin frac=1632450492),	expected 0.760179 (~same)
e. mul_l vs. mul_d, got 0.7601784 (bin frac=1632471053),	expected 0.760179 (~same)
f. mul vs. mul_l, got -0.-70395 (bin frac=-15117337),	expected -0.007040 (~same)
g. mul vs. mul_d, got -0.-70395 (bin frac=-15117337),	expected -0.007040 (~same)
h. mul_l vs. mul_d, got -0.-70397 (bin frac=-15117726),	expected -0.007040 (~same)
i. div vs. div_l, got 0.7880523 (bin frac=1692329794),	expected 0.788052 (~same)
n1 = -0.-6919225 (bin frac=-1485892579)
n2 = -0.-2398942 (bin frac=-515169046)
n3 = -0.-7232492 (bin frac=-1553166115) (n3 always random between -1 and 1)
a. sum vs. sum_l, got -0.-9318168 (bin frac=-2001061625),	expected -0.931817 (~same)
b. sum vs. sum_l, got -INF,	expected -1.000000 (~same)
c. mul vs. mul_l, got 0.1659829 (bin frac=356445708),	expected 0.165988 (~same)
d. mul vs. mul_d, got 0.1659829 (bin frac=356445708),	expected 0.165988 (~same)
e. mul_l vs. mul_d, got 0.1659882 (bin frac=356457132),	expected 0.165988 (~same)
f. mul vs. mul_l, got 0.5004140 (bin frac=1074631155),	expected 0.500433 (~same)
g. mul vs. mul_d, got 0.5004140 (bin frac=1074631155),	expected 0.500433 (~same)
h. mul_l vs. mul_d, got 0.5004325 (bin frac=1074670815),	expected 0.500433 (~same)
i. div vs. div_l, got +INF,	expected 1.000000 (~same)
n1 = 0.2308225 (bin frac=495687808)
n2 = 0.5246444 (bin frac=1126665524)
n3 = -0.-9594782 (bin frac=-2060464017) (n3 always random between -1 and 1)
a. sum vs. sum_l, got 0.7554670 (bin frac=1622353332),	expected 0.755467 (~same)
b. sum vs. sum_l, got -0.-7286556 (bin frac=-1564776209),	expected -0.728656 (~same)
c. mul vs. mul_l, got 0.1210979 (bin frac=260055820),	expected 0.121100 (~same)
d. mul vs. mul_d, got 0.1210979 (bin frac=260055820),	expected 0.121100 (~same)
e. mul_l vs. mul_d, got 0.1210998 (bin frac=260059891),	expected 0.121100 (~same)
f. mul vs. mul_l, got -0.-2214651 (bin frac=-475592880),	expected -0.221469 (~same)
g. mul vs. mul_d, got -0.-2214651 (bin frac=-475592880),	expected -0.221469 (~same)
h. mul_l vs. mul_d, got -0.-2214692 (bin frac=-475601708),	expected -0.221469 (~same)
i. div vs. div_l, got 0.4399599 (bin frac=944806989),	expected 0.439960 (~same)
n1 = 0.1441885 (bin frac=309642479)
n2 = 0.4268353 (bin frac=916622132)
n3 = 0.5717744 (bin frac=1227876406) (n3 always random between -1 and 1)
a. sum vs. sum_l, got 0.5710239 (bin frac=1226264611),	expected 0.571024 (~same)
b. sum vs. sum_l, got 0.7159629 (bin frac=1537518885),	expected 0.715963 (~same)
c. mul vs. mul_l, got 0.615443 (bin frac=132165431),	expected 0.061545 (~same)
d. mul vs. mul_d, got 0.615443 (bin frac=132165431),	expected 0.061545 (~same)
e. mul_l vs. mul_d, got 0.615447 (bin frac=132166384),	expected 0.061545 (~same)
f. mul vs. mul_l, got 0.824411 (bin frac=177041107),	expected 0.082443 (~same)
g. mul vs. mul_d, got 0.824411 (bin frac=177041107),	expected 0.082443 (~same)
h. mul_l vs. mul_d, got 0.824433 (bin frac=177045676),	expected 0.082443 (~same)
i. div vs. div_l, got 0.3378081 (bin frac=725437600),	expected 0.337808 (~same)
n1 = -0.-448315 (bin frac=-96274978)
n2 = 0.5159349 (bin frac=1107962038)
n3 = 0.5475072 (bin frac=1175763062) (n3 always random between -1 and 1)
a. sum vs. sum_l, got 0.4711034 (bin frac=1011687060),	expected 0.471103 (~same)
b. sum vs. sum_l, got 0.5026757 (bin frac=1079488084),	expected 0.502676 (~same)
c. mul vs. mul_l, got -0.-231293 (bin frac=-49669828),	expected -0.023130 (~same)
d. mul vs. mul_d, got -0.-231293 (bin frac=-49669828),	expected -0.023130 (~same)
e. mul_l vs. mul_d, got -0.-231301 (bin frac=-49671633),	expected -0.023130 (~same)
f. mul vs. mul_l, got -0.-245446 (bin frac=-52709189),	expected -0.024546 (~same)
g. mul vs. mul_d, got -0.-245446 (bin frac=-52709189),	expected -0.024546 (~same)
h. mul_l vs. mul_d, got -0.-245455 (bin frac=-52711257),	expected -0.024546 (~same)
i. div vs. div_l, got -0.-868937 (bin frac=-186602910),	expected -0.086894 (~same)

0 Warnings for 31 frac bits.
Largest delta was: 1.931004E-05
All tests passed using 31-bit fracs, and '9999999' as max decimal frac.

Grand total of 0 warnings checking 6 configurations.
Largest delta of all: 6.666667E-02 (using 4 frac bits)
